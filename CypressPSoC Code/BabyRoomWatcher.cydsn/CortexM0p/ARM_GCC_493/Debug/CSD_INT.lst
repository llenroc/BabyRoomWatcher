ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CSD_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CSD_CSDPostSingleScan,"ax",%progbits
  18              		.align	2
  19              		.global	CSD_CSDPostSingleScan
  20              		.code	16
  21              		.thumb_func
  22              		.type	CSD_CSDPostSingleScan, %function
  23              	CSD_CSDPostSingleScan:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\CSD_INT.c"
   1:Generated_Source\PSoC4/CSD_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CSD_INT.c **** * \file CSD_INT.c
   3:Generated_Source\PSoC4/CSD_INT.c **** * \version 3.0
   4:Generated_Source\PSoC4/CSD_INT.c **** *
   5:Generated_Source\PSoC4/CSD_INT.c **** * \brief
   6:Generated_Source\PSoC4/CSD_INT.c **** *   This file contains the source code for implementation of the CapSense component
   7:Generated_Source\PSoC4/CSD_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CSD_INT.c **** *
   9:Generated_Source\PSoC4/CSD_INT.c **** * \see CapSense P4 v3.0 Datasheet
  10:Generated_Source\PSoC4/CSD_INT.c **** *
  11:Generated_Source\PSoC4/CSD_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CSD_INT.c **** * Copyright (2016), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CSD_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CSD_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CSD_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CSD_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CSD_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CSD_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CSD_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CSD_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CSD_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CSD_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CSD_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CSD_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CSD_INT.c **** *
  26:Generated_Source\PSoC4/CSD_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CSD_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CSD_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CSD_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CSD_INT.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CSD_INT.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CSD_INT.c **** * does not authorize its products for use as critical components in life-support
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 2


  33:Generated_Source\PSoC4/CSD_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CSD_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CSD_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CSD_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CSD_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CSD_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CSD_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CSD_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CSD_INT.c **** #include "CSD_Sensing.h"
  42:Generated_Source\PSoC4/CSD_INT.c **** 
  43:Generated_Source\PSoC4/CSD_INT.c **** 
  44:Generated_Source\PSoC4/CSD_INT.c **** /*******************************************************************************
  45:Generated_Source\PSoC4/CSD_INT.c **** * Static Function Prototypes
  46:Generated_Source\PSoC4/CSD_INT.c **** *******************************************************************************/
  47:Generated_Source\PSoC4/CSD_INT.c **** /**
  48:Generated_Source\PSoC4/CSD_INT.c **** * \if SECTION_CAPSENSE_INTERNAL
  49:Generated_Source\PSoC4/CSD_INT.c **** * \addtogroup group_capsense_internal
  50:Generated_Source\PSoC4/CSD_INT.c **** * \{
  51:Generated_Source\PSoC4/CSD_INT.c **** */
  52:Generated_Source\PSoC4/CSD_INT.c **** 
  53:Generated_Source\PSoC4/CSD_INT.c **** #define CSD_CSD_EXTRA_CYCLES_NUMBER    (1Lu)
  54:Generated_Source\PSoC4/CSD_INT.c **** 
  55:Generated_Source\PSoC4/CSD_INT.c **** #if (((CSD_ENABLE == CSD_CSD_EN) || (CSD_ENABLE == CSD_CSD_CSX_EN)) && \
  56:Generated_Source\PSoC4/CSD_INT.c ****      (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN))
  57:Generated_Source\PSoC4/CSD_INT.c ****     static void CSD_SsNextFrequencyScan(void);
  58:Generated_Source\PSoC4/CSD_INT.c **** #endif /* (((CSD_ENABLE == CSD_CSD_EN) || (CSD_ENABLE == CSD_CSD_CSX_EN)) && \
  59:Generated_Source\PSoC4/CSD_INT.c ****             (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)) */
  60:Generated_Source\PSoC4/CSD_INT.c **** 
  61:Generated_Source\PSoC4/CSD_INT.c **** #if ((CSD_ENABLE == CSD_CSD_EN) || (CSD_ENABLE == CSD_CSD_CSX_EN))
  62:Generated_Source\PSoC4/CSD_INT.c ****     CY_INLINE static void CSD_SsCSDPostScan(void);
  63:Generated_Source\PSoC4/CSD_INT.c ****     CY_INLINE static void CSD_SsInitNextScan(void);
  64:Generated_Source\PSoC4/CSD_INT.c **** #endif /* ((CSD_ENABLE == CSD_CSD_EN) || (CSD_ENABLE == CSD_CSD_CSX_EN)) */
  65:Generated_Source\PSoC4/CSD_INT.c **** 
  66:Generated_Source\PSoC4/CSD_INT.c **** /** \}
  67:Generated_Source\PSoC4/CSD_INT.c **** * \endif */
  68:Generated_Source\PSoC4/CSD_INT.c **** 
  69:Generated_Source\PSoC4/CSD_INT.c **** 
  70:Generated_Source\PSoC4/CSD_INT.c **** /**
  71:Generated_Source\PSoC4/CSD_INT.c **** * \if SECTION_CAPSENSE_INTERRUPT
  72:Generated_Source\PSoC4/CSD_INT.c **** * \addtogroup group_capsense_interrupt
  73:Generated_Source\PSoC4/CSD_INT.c **** * \{
  74:Generated_Source\PSoC4/CSD_INT.c **** */
  75:Generated_Source\PSoC4/CSD_INT.c **** 
  76:Generated_Source\PSoC4/CSD_INT.c **** 
  77:Generated_Source\PSoC4/CSD_INT.c **** #if ((CSD_ENABLE == CSD_CSD_EN) || (CSD_ENABLE == CSD_CSD_CSX_EN))
  78:Generated_Source\PSoC4/CSD_INT.c **** 
  79:Generated_Source\PSoC4/CSD_INT.c **** #if (CSD_ENABLE == CSD_CSDV2)
  80:Generated_Source\PSoC4/CSD_INT.c ****     /*  CSDv2 HW IP block part */
  81:Generated_Source\PSoC4/CSD_INT.c **** 
  82:Generated_Source\PSoC4/CSD_INT.c ****     /*******************************************************************************
  83:Generated_Source\PSoC4/CSD_INT.c ****     * Function Name: CSD_CSDPostSingleScan
  84:Generated_Source\PSoC4/CSD_INT.c ****     ****************************************************************************//**
  85:Generated_Source\PSoC4/CSD_INT.c ****     *
  86:Generated_Source\PSoC4/CSD_INT.c ****     * \brief
  87:Generated_Source\PSoC4/CSD_INT.c ****     *  This is an internal ISR function for single-sensor scanning implementation.
  88:Generated_Source\PSoC4/CSD_INT.c ****     *
  89:Generated_Source\PSoC4/CSD_INT.c ****     * \details
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 3


  90:Generated_Source\PSoC4/CSD_INT.c ****     *  This ISR handler is triggered when the user calls the
  91:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_CSDScanExt() function.
  92:Generated_Source\PSoC4/CSD_INT.c ****     *
  93:Generated_Source\PSoC4/CSD_INT.c ****     *  The following tasks are performed for CSDv1 HW IP block:
  94:Generated_Source\PSoC4/CSD_INT.c ****     *    1. Disable the CSD interrupt
  95:Generated_Source\PSoC4/CSD_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
  96:Generated_Source\PSoC4/CSD_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
  97:Generated_Source\PSoC4/CSD_INT.c ****     *    4. Update the Scan Counter
  98:Generated_Source\PSoC4/CSD_INT.c ****     *    5. Reset the BUSY flag
  99:Generated_Source\PSoC4/CSD_INT.c ****     *    6. Enable the CSD interrupt.
 100:Generated_Source\PSoC4/CSD_INT.c ****     *
 101:Generated_Source\PSoC4/CSD_INT.c ****     *  The following tasks are performed for CSDv2 HW IP block:
 102:Generated_Source\PSoC4/CSD_INT.c ****     *    1. Check if the raw data is not noisy
 103:Generated_Source\PSoC4/CSD_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 104:Generated_Source\PSoC4/CSD_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 105:Generated_Source\PSoC4/CSD_INT.c ****     *      multi-frequency is enabled
 106:Generated_Source\PSoC4/CSD_INT.c ****     *    4. Update the Scan Counter
 107:Generated_Source\PSoC4/CSD_INT.c ****     *    5. Reset the BUSY flag
 108:Generated_Source\PSoC4/CSD_INT.c ****     *    6. Enable the CSD interrupt.
 109:Generated_Source\PSoC4/CSD_INT.c ****     *
 110:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler changes IMO and initializes scanning for the next frequency
 111:Generated_Source\PSoC4/CSD_INT.c ****     *  channels when multi-frequency scanning is enabled.
 112:Generated_Source\PSoC4/CSD_INT.c ****     *
 113:Generated_Source\PSoC4/CSD_INT.c **** 	*  This function has two Macro Callbacks that allow calling the user code
 114:Generated_Source\PSoC4/CSD_INT.c ****     *  from macros specified in a component's generated code. Refer to the 
 115:Generated_Source\PSoC4/CSD_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 116:Generated_Source\PSoC4/CSD_INT.c ****     *  for details. 
 117:Generated_Source\PSoC4/CSD_INT.c ****     *
 118:Generated_Source\PSoC4/CSD_INT.c ****     *******************************************************************************/
 119:Generated_Source\PSoC4/CSD_INT.c ****     CY_ISR(CSD_CSDPostSingleScan)
 120:Generated_Source\PSoC4/CSD_INT.c ****     {
  26              		.loc 1 120 0
  27              		.cfi_startproc
 121:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_ENTRY_CALLBACK
 122:Generated_Source\PSoC4/CSD_INT.c ****             CSD_EntryCallback();
 123:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_ENTRY_CALLBACK */
 124:Generated_Source\PSoC4/CSD_INT.c **** 
 125:Generated_Source\PSoC4/CSD_INT.c ****         /* Clear pending interrupt */
 126:Generated_Source\PSoC4/CSD_INT.c ****         CY_SET_REG32(CSD_INTR_PTR, CSD_INTR_SET_MASK);
  28              		.loc 1 126 0
  29 0000 8322     		mov	r2, #131
  30 0002 5200     		lsl	r2, r2, #1
  31 0004 144B     		ldr	r3, .L4
  32 0006 1A60     		str	r2, [r3]
  33              	.LBB4:
  34              	.LBB5:
 127:Generated_Source\PSoC4/CSD_INT.c **** 
 128:Generated_Source\PSoC4/CSD_INT.c ****     #if (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN)
 129:Generated_Source\PSoC4/CSD_INT.c ****         if ((CSD_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CSD_RESULT_VAL1_PTR) &
 130:Generated_Source\PSoC4/CSD_INT.c ****                                                     CSD_RESULT_VAL1_BAD_CONVS_MASK) >>
 131:Generated_Source\PSoC4/CSD_INT.c ****                                                     CSD_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 132:Generated_Source\PSoC4/CSD_INT.c ****                                                     (0u < CSD_badConversionsNum))
 133:Generated_Source\PSoC4/CSD_INT.c ****         {
 134:Generated_Source\PSoC4/CSD_INT.c ****             /* Decrement bad conversions number */
 135:Generated_Source\PSoC4/CSD_INT.c ****             CSD_badConversionsNum--;
 136:Generated_Source\PSoC4/CSD_INT.c **** 
 137:Generated_Source\PSoC4/CSD_INT.c ****             /* Start the re-scan */
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 4


 138:Generated_Source\PSoC4/CSD_INT.c ****             CY_SET_REG32(CSD_SEQ_START_PTR, CSD_SEQ_START_AZ0_SKIP_MASK |
 139:Generated_Source\PSoC4/CSD_INT.c ****                                                          CSD_SEQ_START_AZ1_SKIP_MASK |
 140:Generated_Source\PSoC4/CSD_INT.c ****                                                          CSD_SEQ_START_START_MASK);
 141:Generated_Source\PSoC4/CSD_INT.c ****         }
 142:Generated_Source\PSoC4/CSD_INT.c ****         else
 143:Generated_Source\PSoC4/CSD_INT.c ****         {
 144:Generated_Source\PSoC4/CSD_INT.c ****     #endif /* (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN) */
 145:Generated_Source\PSoC4/CSD_INT.c **** 
 146:Generated_Source\PSoC4/CSD_INT.c ****             CSD_SsCSDPostScan();
 147:Generated_Source\PSoC4/CSD_INT.c **** 
 148:Generated_Source\PSoC4/CSD_INT.c ****             #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 149:Generated_Source\PSoC4/CSD_INT.c ****                 if (CSD_FREQ_CHANNEL_2 > CSD_scanFreqIndex)
 150:Generated_Source\PSoC4/CSD_INT.c ****                 {
 151:Generated_Source\PSoC4/CSD_INT.c ****                     /* Scan the next channel */
 152:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsNextFrequencyScan();
 153:Generated_Source\PSoC4/CSD_INT.c ****                 }
 154:Generated_Source\PSoC4/CSD_INT.c ****                 else
 155:Generated_Source\PSoC4/CSD_INT.c ****                 {
 156:Generated_Source\PSoC4/CSD_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 157:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_scanFreqIndex = CSD_FREQ_CHANNEL_0;
 158:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsChangeImoFreq(CSD_FREQ_CHANNEL_0);
 159:Generated_Source\PSoC4/CSD_INT.c **** 
 160:Generated_Source\PSoC4/CSD_INT.c ****                     #if (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN)
 161:Generated_Source\PSoC4/CSD_INT.c ****                         /*  Disable CSDv2 block */
 162:Generated_Source\PSoC4/CSD_INT.c ****                         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd);
 163:Generated_Source\PSoC4/CSD_INT.c ****                     #endif /* (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN) */
 164:Generated_Source\PSoC4/CSD_INT.c **** 
 165:Generated_Source\PSoC4/CSD_INT.c ****                     /* Update Scan Counter */
 166:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_dsRam.scanCounter++;
 167:Generated_Source\PSoC4/CSD_INT.c **** 
 168:Generated_Source\PSoC4/CSD_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 169:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_dsRam.status &= ~(CSD_SW_STS_BUSY | CSD_WDGT_SW_STS_BUSY);
 170:Generated_Source\PSoC4/CSD_INT.c ****                 }
 171:Generated_Source\PSoC4/CSD_INT.c ****             #else
 172:Generated_Source\PSoC4/CSD_INT.c ****                 {
 173:Generated_Source\PSoC4/CSD_INT.c ****                     #if (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN)
 174:Generated_Source\PSoC4/CSD_INT.c ****                         /*  Disable CSDv2 block */
 175:Generated_Source\PSoC4/CSD_INT.c ****                         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd);
 176:Generated_Source\PSoC4/CSD_INT.c ****                     #endif /* (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN) */
 177:Generated_Source\PSoC4/CSD_INT.c **** 
 178:Generated_Source\PSoC4/CSD_INT.c ****                     /* Update Scan Counter */
 179:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_dsRam.scanCounter++;
 180:Generated_Source\PSoC4/CSD_INT.c **** 
 181:Generated_Source\PSoC4/CSD_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 182:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_dsRam.status &= ~(CSD_SW_STS_BUSY | CSD_WDGT_SW_STS_BUSY);
 183:Generated_Source\PSoC4/CSD_INT.c ****                 }
 184:Generated_Source\PSoC4/CSD_INT.c ****             #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 185:Generated_Source\PSoC4/CSD_INT.c ****     #if (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN)
 186:Generated_Source\PSoC4/CSD_INT.c ****         }
 187:Generated_Source\PSoC4/CSD_INT.c ****     #endif /* (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN) */
 188:Generated_Source\PSoC4/CSD_INT.c **** 
 189:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_EXIT_CALLBACK
 190:Generated_Source\PSoC4/CSD_INT.c ****             CSD_ExitCallback();
 191:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_EXIT_CALLBACK */
 192:Generated_Source\PSoC4/CSD_INT.c ****     }
 193:Generated_Source\PSoC4/CSD_INT.c **** 
 194:Generated_Source\PSoC4/CSD_INT.c **** 
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 5


 195:Generated_Source\PSoC4/CSD_INT.c ****     /*******************************************************************************
 196:Generated_Source\PSoC4/CSD_INT.c ****     * Function Name: CSD_CSDPostMultiScan
 197:Generated_Source\PSoC4/CSD_INT.c ****     ****************************************************************************//**
 198:Generated_Source\PSoC4/CSD_INT.c ****     *
 199:Generated_Source\PSoC4/CSD_INT.c ****     * \brief
 200:Generated_Source\PSoC4/CSD_INT.c ****     *  This is an internal ISR function for multiple sensor-scanning 
 201:Generated_Source\PSoC4/CSD_INT.c ****     *  implementation.
 202:Generated_Source\PSoC4/CSD_INT.c ****     *
 203:Generated_Source\PSoC4/CSD_INT.c ****     * \details
 204:Generated_Source\PSoC4/CSD_INT.c ****     *  This ISR handler is triggered when the user calls the
 205:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_Scan() or CSD_ScanAllWidgets() APIs.
 206:Generated_Source\PSoC4/CSD_INT.c ****     *  
 207:Generated_Source\PSoC4/CSD_INT.c ****     *  The following tasks are performed:
 208:Generated_Source\PSoC4/CSD_INT.c ****     *    1. Disable the CSD interrupt
 209:Generated_Source\PSoC4/CSD_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 210:Generated_Source\PSoC4/CSD_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 211:Generated_Source\PSoC4/CSD_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 212:Generated_Source\PSoC4/CSD_INT.c ****     *    5. Update Scan Counter
 213:Generated_Source\PSoC4/CSD_INT.c ****     *    6. Reset the BUSY flag
 214:Generated_Source\PSoC4/CSD_INT.c ****     *    7. Enable the CSD interrupt.
 215:Generated_Source\PSoC4/CSD_INT.c ****     *
 216:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the 
 217:Generated_Source\PSoC4/CSD_INT.c ****     *  widget has more than one sensor.
 218:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 219:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_ScanAllWidgets() APIs are called and the project has
 220:Generated_Source\PSoC4/CSD_INT.c ****     *  more than one widget.
 221:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 222:Generated_Source\PSoC4/CSD_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 223:Generated_Source\PSoC4/CSD_INT.c ****     *
 224:Generated_Source\PSoC4/CSD_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 225:Generated_Source\PSoC4/CSD_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 226:Generated_Source\PSoC4/CSD_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 227:Generated_Source\PSoC4/CSD_INT.c ****     *  for details.
 228:Generated_Source\PSoC4/CSD_INT.c ****     *
 229:Generated_Source\PSoC4/CSD_INT.c ****     *******************************************************************************/
 230:Generated_Source\PSoC4/CSD_INT.c ****     CY_ISR(CSD_CSDPostMultiScan)
 231:Generated_Source\PSoC4/CSD_INT.c ****     {
 232:Generated_Source\PSoC4/CSD_INT.c ****         /*  Declare and initialise ptr to sensor IO structure to appropriate address        */
 233:Generated_Source\PSoC4/CSD_INT.c ****         CSD_FLASH_IO_STRUCT const *curSnsIOPtr = (CSD_FLASH_IO_STRUCT const *)
 234:Generated_Source\PSoC4/CSD_INT.c ****                                                           CSD_dsFlash.wdgtArray[CSD_widgetIndex].pt
 235:Generated_Source\PSoC4/CSD_INT.c ****                                                           + CSD_sensorIndex;
 236:Generated_Source\PSoC4/CSD_INT.c **** 
 237:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_ENTRY_CALLBACK
 238:Generated_Source\PSoC4/CSD_INT.c ****             CSD_EntryCallback();
 239:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_ENTRY_CALLBACK */
 240:Generated_Source\PSoC4/CSD_INT.c **** 
 241:Generated_Source\PSoC4/CSD_INT.c ****         /* Clear pending interrupt */
 242:Generated_Source\PSoC4/CSD_INT.c ****         CY_SET_REG32(CSD_INTR_PTR, CSD_INTR_SET_MASK);
 243:Generated_Source\PSoC4/CSD_INT.c **** 
 244:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN)
 245:Generated_Source\PSoC4/CSD_INT.c ****             if ((CSD_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CSD_RESULT_VAL1_PTR) &
 246:Generated_Source\PSoC4/CSD_INT.c ****                                                       CSD_RESULT_VAL1_BAD_CONVS_MASK) >>
 247:Generated_Source\PSoC4/CSD_INT.c ****                                                       CSD_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 248:Generated_Source\PSoC4/CSD_INT.c ****                                                       (0u < CSD_badConversionsNum))
 249:Generated_Source\PSoC4/CSD_INT.c ****             {
 250:Generated_Source\PSoC4/CSD_INT.c ****                 /* Decrement bad conversions number */
 251:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_badConversionsNum--;
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 6


 252:Generated_Source\PSoC4/CSD_INT.c **** 
 253:Generated_Source\PSoC4/CSD_INT.c ****                 /* Start the re-scan */
 254:Generated_Source\PSoC4/CSD_INT.c ****                 CY_SET_REG32(CSD_SEQ_START_PTR, CSD_SEQ_START_AZ0_SKIP_MASK |
 255:Generated_Source\PSoC4/CSD_INT.c ****                                                              CSD_SEQ_START_AZ1_SKIP_MASK |
 256:Generated_Source\PSoC4/CSD_INT.c ****                                                              CSD_SEQ_START_START_MASK);
 257:Generated_Source\PSoC4/CSD_INT.c ****             }
 258:Generated_Source\PSoC4/CSD_INT.c ****             else
 259:Generated_Source\PSoC4/CSD_INT.c ****             {
 260:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN) */
 261:Generated_Source\PSoC4/CSD_INT.c **** 
 262:Generated_Source\PSoC4/CSD_INT.c ****             CSD_SsCSDPostScan();
 263:Generated_Source\PSoC4/CSD_INT.c **** 
 264:Generated_Source\PSoC4/CSD_INT.c ****             #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 265:Generated_Source\PSoC4/CSD_INT.c ****                 /* Disable sensor when all frequency channels are scanned */
 266:Generated_Source\PSoC4/CSD_INT.c ****                 if (CSD_FREQ_CHANNEL_2 == CSD_scanFreqIndex)
 267:Generated_Source\PSoC4/CSD_INT.c ****                 {
 268:Generated_Source\PSoC4/CSD_INT.c ****                     /* Disable sensor */
 269:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_CSDDisconnectSns(curSnsIOPtr);
 270:Generated_Source\PSoC4/CSD_INT.c ****                 }
 271:Generated_Source\PSoC4/CSD_INT.c ****             #else
 272:Generated_Source\PSoC4/CSD_INT.c ****                 /* Disable sensor */
 273:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_CSDDisconnectSns(curSnsIOPtr);
 274:Generated_Source\PSoC4/CSD_INT.c ****             #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 275:Generated_Source\PSoC4/CSD_INT.c **** 
 276:Generated_Source\PSoC4/CSD_INT.c ****             #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 277:Generated_Source\PSoC4/CSD_INT.c ****                 if (CSD_FREQ_CHANNEL_2 > CSD_scanFreqIndex)
 278:Generated_Source\PSoC4/CSD_INT.c ****                 {
 279:Generated_Source\PSoC4/CSD_INT.c ****                      /* Scan the next channel */
 280:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsNextFrequencyScan();
 281:Generated_Source\PSoC4/CSD_INT.c ****                 }
 282:Generated_Source\PSoC4/CSD_INT.c ****                 else
 283:Generated_Source\PSoC4/CSD_INT.c ****                 {
 284:Generated_Source\PSoC4/CSD_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 285:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_scanFreqIndex = CSD_FREQ_CHANNEL_0;
 286:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsChangeImoFreq(CSD_FREQ_CHANNEL_0);
 287:Generated_Source\PSoC4/CSD_INT.c **** 
 288:Generated_Source\PSoC4/CSD_INT.c ****                      /* Scan the next sensor */
 289:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsInitNextScan();
 290:Generated_Source\PSoC4/CSD_INT.c ****                 }
 291:Generated_Source\PSoC4/CSD_INT.c ****             #else
 292:Generated_Source\PSoC4/CSD_INT.c ****                 /* Scan the next sensor */
 293:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsInitNextScan();
 294:Generated_Source\PSoC4/CSD_INT.c ****             #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 295:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN)
 296:Generated_Source\PSoC4/CSD_INT.c ****             }
 297:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN) */
 298:Generated_Source\PSoC4/CSD_INT.c **** 
 299:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_EXIT_CALLBACK
 300:Generated_Source\PSoC4/CSD_INT.c ****             CSD_ExitCallback();
 301:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_EXIT_CALLBACK */
 302:Generated_Source\PSoC4/CSD_INT.c ****     }
 303:Generated_Source\PSoC4/CSD_INT.c **** 
 304:Generated_Source\PSoC4/CSD_INT.c **** 
 305:Generated_Source\PSoC4/CSD_INT.c ****     #if (CSD_ENABLE == CSD_CSD_GANGED_SNS_EN)
 306:Generated_Source\PSoC4/CSD_INT.c ****     /*******************************************************************************
 307:Generated_Source\PSoC4/CSD_INT.c ****     * Function Name: CSD_CSDPostMultiScanGanged
 308:Generated_Source\PSoC4/CSD_INT.c ****     ****************************************************************************//**
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 7


 309:Generated_Source\PSoC4/CSD_INT.c ****     *
 310:Generated_Source\PSoC4/CSD_INT.c ****     * \brief
 311:Generated_Source\PSoC4/CSD_INT.c ****     *  This is an internal ISR function for multiple sensor scanning 
 312:Generated_Source\PSoC4/CSD_INT.c ****     *  implementation for ganged sensors.
 313:Generated_Source\PSoC4/CSD_INT.c ****     *
 314:Generated_Source\PSoC4/CSD_INT.c ****     * \details
 315:Generated_Source\PSoC4/CSD_INT.c ****     *  This ISR handler is triggered when the user calls the
 316:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_Scan() API for a ganged sensor or the
 317:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_ScanAllWidgets() API in the project with ganged sensors.
 318:Generated_Source\PSoC4/CSD_INT.c ****     *
 319:Generated_Source\PSoC4/CSD_INT.c ****     *  The following tasks are performed:
 320:Generated_Source\PSoC4/CSD_INT.c ****     *    1. Disable the CSD interrupt
 321:Generated_Source\PSoC4/CSD_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 322:Generated_Source\PSoC4/CSD_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 323:Generated_Source\PSoC4/CSD_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 324:Generated_Source\PSoC4/CSD_INT.c ****     *    5. Update Scan Counter
 325:Generated_Source\PSoC4/CSD_INT.c ****     *    6. Reset the BUSY flag
 326:Generated_Source\PSoC4/CSD_INT.c ****     *    7. Enable the CSD interrupt.
 327:Generated_Source\PSoC4/CSD_INT.c ****     *
 328:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 329:Generated_Source\PSoC4/CSD_INT.c ****     *  widget has more than one sensor.
 330:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 331:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_ScanAllWidgets() APIs are called and the project has 
 332:Generated_Source\PSoC4/CSD_INT.c ****     *  more than one widget.
 333:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next 
 334:Generated_Source\PSoC4/CSD_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 335:Generated_Source\PSoC4/CSD_INT.c ****     *
 336:Generated_Source\PSoC4/CSD_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 337:Generated_Source\PSoC4/CSD_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 338:Generated_Source\PSoC4/CSD_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 339:Generated_Source\PSoC4/CSD_INT.c ****     *  for details.
 340:Generated_Source\PSoC4/CSD_INT.c ****     *
 341:Generated_Source\PSoC4/CSD_INT.c ****     *******************************************************************************/
 342:Generated_Source\PSoC4/CSD_INT.c ****     CY_ISR(CSD_CSDPostMultiScanGanged)
 343:Generated_Source\PSoC4/CSD_INT.c ****     {
 344:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_ENTRY_CALLBACK
 345:Generated_Source\PSoC4/CSD_INT.c ****             CSD_EntryCallback();
 346:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_ENTRY_CALLBACK */
 347:Generated_Source\PSoC4/CSD_INT.c **** 
 348:Generated_Source\PSoC4/CSD_INT.c ****         /* Clear pending interrupt */
 349:Generated_Source\PSoC4/CSD_INT.c ****         CY_SET_REG32(CSD_INTR_PTR, CSD_INTR_SET_MASK);
 350:Generated_Source\PSoC4/CSD_INT.c **** 
 351:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN)
 352:Generated_Source\PSoC4/CSD_INT.c ****             if ((CSD_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CSD_RESULT_VAL1_PTR) &
 353:Generated_Source\PSoC4/CSD_INT.c ****                                                       CSD_RESULT_VAL1_BAD_CONVS_MASK) >>
 354:Generated_Source\PSoC4/CSD_INT.c ****                                                       CSD_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 355:Generated_Source\PSoC4/CSD_INT.c ****                                                       (0u < CSD_badConversionsNum))
 356:Generated_Source\PSoC4/CSD_INT.c ****             {
 357:Generated_Source\PSoC4/CSD_INT.c ****                 /* Decrement bad conversions number */
 358:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_badConversionsNum--;
 359:Generated_Source\PSoC4/CSD_INT.c **** 
 360:Generated_Source\PSoC4/CSD_INT.c ****                 /* Start the re-scan */
 361:Generated_Source\PSoC4/CSD_INT.c ****                 CY_SET_REG32(CSD_SEQ_START_PTR, CSD_SEQ_START_AZ0_SKIP_MASK |
 362:Generated_Source\PSoC4/CSD_INT.c ****                                                              CSD_SEQ_START_AZ1_SKIP_MASK |
 363:Generated_Source\PSoC4/CSD_INT.c ****                                                              CSD_SEQ_START_START_MASK);
 364:Generated_Source\PSoC4/CSD_INT.c ****             }
 365:Generated_Source\PSoC4/CSD_INT.c ****             else
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 8


 366:Generated_Source\PSoC4/CSD_INT.c ****             {
 367:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN) */
 368:Generated_Source\PSoC4/CSD_INT.c **** 
 369:Generated_Source\PSoC4/CSD_INT.c ****             CSD_SsCSDPostScan();
 370:Generated_Source\PSoC4/CSD_INT.c **** 
 371:Generated_Source\PSoC4/CSD_INT.c ****             #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 372:Generated_Source\PSoC4/CSD_INT.c ****                 if (CSD_FREQ_CHANNEL_2 == CSD_scanFreqIndex)
 373:Generated_Source\PSoC4/CSD_INT.c ****                 {
 374:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsCSDDisconnectSnsExt((uint32)CSD_widgetIndex, (uint32)CSD_sensorIndex);
 375:Generated_Source\PSoC4/CSD_INT.c ****                 }
 376:Generated_Source\PSoC4/CSD_INT.c ****             #else
 377:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsCSDDisconnectSnsExt((uint32)CSD_widgetIndex, (uint32)CSD_sensorIndex);
 378:Generated_Source\PSoC4/CSD_INT.c ****             #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 379:Generated_Source\PSoC4/CSD_INT.c **** 
 380:Generated_Source\PSoC4/CSD_INT.c ****             #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 381:Generated_Source\PSoC4/CSD_INT.c ****                 if (CSD_FREQ_CHANNEL_2 > CSD_scanFreqIndex)
 382:Generated_Source\PSoC4/CSD_INT.c ****                 {
 383:Generated_Source\PSoC4/CSD_INT.c ****                      /* Scan the next channel */
 384:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsNextFrequencyScan();
 385:Generated_Source\PSoC4/CSD_INT.c ****                 }
 386:Generated_Source\PSoC4/CSD_INT.c ****                 else
 387:Generated_Source\PSoC4/CSD_INT.c ****                 {
 388:Generated_Source\PSoC4/CSD_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 389:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_scanFreqIndex = CSD_FREQ_CHANNEL_0;
 390:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsChangeImoFreq(CSD_FREQ_CHANNEL_0);
 391:Generated_Source\PSoC4/CSD_INT.c **** 
 392:Generated_Source\PSoC4/CSD_INT.c ****                      /* Scan the next sensor */
 393:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsInitNextScan();
 394:Generated_Source\PSoC4/CSD_INT.c ****                 }
 395:Generated_Source\PSoC4/CSD_INT.c ****             #else
 396:Generated_Source\PSoC4/CSD_INT.c ****                  /* Scan the next sensor */
 397:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsInitNextScan();
 398:Generated_Source\PSoC4/CSD_INT.c ****             #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 399:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN)
 400:Generated_Source\PSoC4/CSD_INT.c ****             }
 401:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN) */
 402:Generated_Source\PSoC4/CSD_INT.c **** 
 403:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_EXIT_CALLBACK
 404:Generated_Source\PSoC4/CSD_INT.c ****             CSD_ExitCallback();
 405:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_EXIT_CALLBACK */
 406:Generated_Source\PSoC4/CSD_INT.c ****     }
 407:Generated_Source\PSoC4/CSD_INT.c ****     #endif /* (CSD_ENABLE == CSD_CSD_GANGED_SNS_EN) */
 408:Generated_Source\PSoC4/CSD_INT.c **** 
 409:Generated_Source\PSoC4/CSD_INT.c **** #else
 410:Generated_Source\PSoC4/CSD_INT.c ****     /* CSDv1 part */
 411:Generated_Source\PSoC4/CSD_INT.c **** 
 412:Generated_Source\PSoC4/CSD_INT.c ****     /*******************************************************************************
 413:Generated_Source\PSoC4/CSD_INT.c ****     * Function Name: CSD_CSDPostSingleScan
 414:Generated_Source\PSoC4/CSD_INT.c ****     ****************************************************************************//**
 415:Generated_Source\PSoC4/CSD_INT.c ****     *
 416:Generated_Source\PSoC4/CSD_INT.c ****     * \brief
 417:Generated_Source\PSoC4/CSD_INT.c ****     *  This is an internal ISR function for single-sensor scanning implementation.
 418:Generated_Source\PSoC4/CSD_INT.c ****     *
 419:Generated_Source\PSoC4/CSD_INT.c ****     * \details
 420:Generated_Source\PSoC4/CSD_INT.c ****     *  This ISR handler is triggered when the user calls the
 421:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_CSDScanExt() function.
 422:Generated_Source\PSoC4/CSD_INT.c ****     *
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 9


 423:Generated_Source\PSoC4/CSD_INT.c ****     *  The following tasks are performed for CSDv1 HW IP block:
 424:Generated_Source\PSoC4/CSD_INT.c ****     *    1. Disable the CSD interrupt
 425:Generated_Source\PSoC4/CSD_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 426:Generated_Source\PSoC4/CSD_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 427:Generated_Source\PSoC4/CSD_INT.c ****     *    4. Update the Scan Counter
 428:Generated_Source\PSoC4/CSD_INT.c ****     *    5. Reset the BUSY flag
 429:Generated_Source\PSoC4/CSD_INT.c ****     *    6. Enable the CSD interrupt.
 430:Generated_Source\PSoC4/CSD_INT.c ****     *
 431:Generated_Source\PSoC4/CSD_INT.c ****     *  The following tasks are performed for CSDv2 HW IP block:
 432:Generated_Source\PSoC4/CSD_INT.c ****     *    1. Check if the raw data is not noisy
 433:Generated_Source\PSoC4/CSD_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 434:Generated_Source\PSoC4/CSD_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 435:Generated_Source\PSoC4/CSD_INT.c ****     *      multi-frequency is enabled
 436:Generated_Source\PSoC4/CSD_INT.c ****     *    4. Update the Scan Counter
 437:Generated_Source\PSoC4/CSD_INT.c ****     *    5. Reset the BUSY flag
 438:Generated_Source\PSoC4/CSD_INT.c ****     *    6. Enable the CSD interrupt.
 439:Generated_Source\PSoC4/CSD_INT.c ****     *
 440:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler changes IMO and initializes scanning for the next frequency
 441:Generated_Source\PSoC4/CSD_INT.c ****     *  channels when multi-frequency scanning is enabled.
 442:Generated_Source\PSoC4/CSD_INT.c ****     *
 443:Generated_Source\PSoC4/CSD_INT.c **** 	*  This function has two Macro Callbacks that allow calling the user code
 444:Generated_Source\PSoC4/CSD_INT.c ****     *  from macros specified in a component's generated code. Refer to the 
 445:Generated_Source\PSoC4/CSD_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 446:Generated_Source\PSoC4/CSD_INT.c ****     *  for details. 
 447:Generated_Source\PSoC4/CSD_INT.c ****     *
 448:Generated_Source\PSoC4/CSD_INT.c ****     *******************************************************************************/
 449:Generated_Source\PSoC4/CSD_INT.c ****     CY_ISR(CSD_CSDPostSingleScan)
 450:Generated_Source\PSoC4/CSD_INT.c ****     {
 451:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_ENTRY_CALLBACK
 452:Generated_Source\PSoC4/CSD_INT.c ****             CSD_EntryCallback();
 453:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_ENTRY_CALLBACK */
 454:Generated_Source\PSoC4/CSD_INT.c **** 
 455:Generated_Source\PSoC4/CSD_INT.c ****         /* Clear pending interrupt */
 456:Generated_Source\PSoC4/CSD_INT.c ****         CY_SET_REG32(CSD_INTR_PTR, CSD_INTR_SET_MASK);
 457:Generated_Source\PSoC4/CSD_INT.c **** 
 458:Generated_Source\PSoC4/CSD_INT.c ****         /* Read Rawdata */
 459:Generated_Source\PSoC4/CSD_INT.c ****         CSD_SsCSDPostScan();
 460:Generated_Source\PSoC4/CSD_INT.c **** 
 461:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 462:Generated_Source\PSoC4/CSD_INT.c ****             if (CSD_FREQ_CHANNEL_2 > CSD_scanFreqIndex)
 463:Generated_Source\PSoC4/CSD_INT.c ****             {
 464:Generated_Source\PSoC4/CSD_INT.c ****                 /*  Connect Vref Buffer to AMUX bus. CSDv1 block is enabled */
 465:Generated_Source\PSoC4/CSD_INT.c ****                 CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CTANK_PRECHARGE_CONFIG_CSD_EN);
 466:Generated_Source\PSoC4/CSD_INT.c **** 
 467:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsNextFrequencyScan();
 468:Generated_Source\PSoC4/CSD_INT.c ****             }
 469:Generated_Source\PSoC4/CSD_INT.c ****             else
 470:Generated_Source\PSoC4/CSD_INT.c ****             {
 471:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_scanFreqIndex = CSD_FREQ_CHANNEL_0;
 472:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsChangeImoFreq(CSD_FREQ_CHANNEL_0);
 473:Generated_Source\PSoC4/CSD_INT.c **** 
 474:Generated_Source\PSoC4/CSD_INT.c ****                 #if (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN)
 475:Generated_Source\PSoC4/CSD_INT.c ****                     /*  Disable CSDv1 block. Connect Vref Buffer to AMUX bus */
 476:Generated_Source\PSoC4/CSD_INT.c ****                     #if ((CSD_CSH_PRECHARGE_IO_BUF == CSD_CSD_CSH_PRECHARGE_SRC) &&\
 477:Generated_Source\PSoC4/CSD_INT.c ****                          (CSD_ENABLE == CSD_CSD_SHIELD_TANK_EN))
 478:Generated_Source\PSoC4/CSD_INT.c ****                         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CMOD_PRECHARGE_CONFIG);
 479:Generated_Source\PSoC4/CSD_INT.c ****                     #else
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 10


 480:Generated_Source\PSoC4/CSD_INT.c ****                         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CTANK_PRECHARGE_CONFIG);
 481:Generated_Source\PSoC4/CSD_INT.c ****                     #endif /* ((CSD_CSH_PRECHARGE_IO_BUF == CSD_CSD_CSH_PRECHARGE_SRC) &&\
 482:Generated_Source\PSoC4/CSD_INT.c ****                                (CSD_ENABLE == CSD_CSD_SHIELD_TANK_EN)) */
 483:Generated_Source\PSoC4/CSD_INT.c ****                 #else
 484:Generated_Source\PSoC4/CSD_INT.c ****                     /*  Connect Vref Buffer to AMUX bus. CSDv1 block is enabled */
 485:Generated_Source\PSoC4/CSD_INT.c ****                     CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CTANK_PRECHARGE_CONFIG_CSD_EN)
 486:Generated_Source\PSoC4/CSD_INT.c ****                 #endif /* (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN) */
 487:Generated_Source\PSoC4/CSD_INT.c **** 
 488:Generated_Source\PSoC4/CSD_INT.c ****                 /* Update Scan Counter */
 489:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_dsRam.scanCounter++;
 490:Generated_Source\PSoC4/CSD_INT.c **** 
 491:Generated_Source\PSoC4/CSD_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 492:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_dsRam.status &= ~(CSD_SW_STS_BUSY | CSD_WDGT_SW_STS_BUSY);
 493:Generated_Source\PSoC4/CSD_INT.c ****             }
 494:Generated_Source\PSoC4/CSD_INT.c ****         #else
 495:Generated_Source\PSoC4/CSD_INT.c ****             {
 496:Generated_Source\PSoC4/CSD_INT.c ****                 #if (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN)
 497:Generated_Source\PSoC4/CSD_INT.c ****                     /*  Disable CSDv1 block. Connect Vref Buffer to AMUX bus */
 498:Generated_Source\PSoC4/CSD_INT.c ****                     #if ((CSD_CSH_PRECHARGE_IO_BUF == CSD_CSD_CSH_PRECHARGE_SRC) &&\
 499:Generated_Source\PSoC4/CSD_INT.c ****                          (CSD_ENABLE == CSD_CSD_SHIELD_TANK_EN))
 500:Generated_Source\PSoC4/CSD_INT.c ****                         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CMOD_PRECHARGE_CONFIG);
 501:Generated_Source\PSoC4/CSD_INT.c ****                     #else
 502:Generated_Source\PSoC4/CSD_INT.c ****                         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CTANK_PRECHARGE_CONFIG);
 503:Generated_Source\PSoC4/CSD_INT.c ****                     #endif /* ((CSD_CSH_PRECHARGE_IO_BUF == CSD_CSD_CSH_PRECHARGE_SRC) &&\
 504:Generated_Source\PSoC4/CSD_INT.c ****                                (CSD_ENABLE == CSD_CSD_SHIELD_TANK_EN)) */
 505:Generated_Source\PSoC4/CSD_INT.c ****                 #else
 506:Generated_Source\PSoC4/CSD_INT.c ****                     /*  Connect Vref Buffer to AMUX bus. CSDv1 block is enabled */
 507:Generated_Source\PSoC4/CSD_INT.c ****                     CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CTANK_PRECHARGE_CONFIG_CSD_EN)
 508:Generated_Source\PSoC4/CSD_INT.c ****                 #endif /* (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN) */
 509:Generated_Source\PSoC4/CSD_INT.c **** 
 510:Generated_Source\PSoC4/CSD_INT.c ****                 /* Update Scan Counter */
 511:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_dsRam.scanCounter++;
 512:Generated_Source\PSoC4/CSD_INT.c **** 
 513:Generated_Source\PSoC4/CSD_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 514:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_dsRam.status &= ~(CSD_SW_STS_BUSY | CSD_WDGT_SW_STS_BUSY);
 515:Generated_Source\PSoC4/CSD_INT.c ****             }
 516:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 517:Generated_Source\PSoC4/CSD_INT.c **** 
 518:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_EXIT_CALLBACK
 519:Generated_Source\PSoC4/CSD_INT.c ****             CSD_ExitCallback();
 520:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_EXIT_CALLBACK */
 521:Generated_Source\PSoC4/CSD_INT.c ****     }
 522:Generated_Source\PSoC4/CSD_INT.c **** 
 523:Generated_Source\PSoC4/CSD_INT.c **** 
 524:Generated_Source\PSoC4/CSD_INT.c ****     /*******************************************************************************
 525:Generated_Source\PSoC4/CSD_INT.c ****     * Function Name: CSD_CSDPostMultiScan
 526:Generated_Source\PSoC4/CSD_INT.c ****     ****************************************************************************//**
 527:Generated_Source\PSoC4/CSD_INT.c ****     *
 528:Generated_Source\PSoC4/CSD_INT.c ****     * \brief
 529:Generated_Source\PSoC4/CSD_INT.c ****     *  This is an internal ISR function for multiple sensor-scanning 
 530:Generated_Source\PSoC4/CSD_INT.c ****     *  implementation.
 531:Generated_Source\PSoC4/CSD_INT.c ****     *
 532:Generated_Source\PSoC4/CSD_INT.c ****     * \details
 533:Generated_Source\PSoC4/CSD_INT.c ****     *  This ISR handler is triggered when the user calls the
 534:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_Scan() or CSD_ScanAllWidgets() APIs.
 535:Generated_Source\PSoC4/CSD_INT.c ****     *  
 536:Generated_Source\PSoC4/CSD_INT.c ****     *  The following tasks are performed:
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 11


 537:Generated_Source\PSoC4/CSD_INT.c ****     *    1. Disable the CSD interrupt
 538:Generated_Source\PSoC4/CSD_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 539:Generated_Source\PSoC4/CSD_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 540:Generated_Source\PSoC4/CSD_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 541:Generated_Source\PSoC4/CSD_INT.c ****     *    5. Update Scan Counter
 542:Generated_Source\PSoC4/CSD_INT.c ****     *    6. Reset the BUSY flag
 543:Generated_Source\PSoC4/CSD_INT.c ****     *    7. Enable the CSD interrupt.
 544:Generated_Source\PSoC4/CSD_INT.c ****     *
 545:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the 
 546:Generated_Source\PSoC4/CSD_INT.c ****     *  widget has more than one sensor.
 547:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 548:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_ScanAllWidgets() APIs are called and the project has
 549:Generated_Source\PSoC4/CSD_INT.c ****     *  more than one widget.
 550:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 551:Generated_Source\PSoC4/CSD_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 552:Generated_Source\PSoC4/CSD_INT.c ****     *
 553:Generated_Source\PSoC4/CSD_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 554:Generated_Source\PSoC4/CSD_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 555:Generated_Source\PSoC4/CSD_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 556:Generated_Source\PSoC4/CSD_INT.c ****     *  for details.
 557:Generated_Source\PSoC4/CSD_INT.c ****     *
 558:Generated_Source\PSoC4/CSD_INT.c ****     *******************************************************************************/
 559:Generated_Source\PSoC4/CSD_INT.c ****     CY_ISR(CSD_CSDPostMultiScan)
 560:Generated_Source\PSoC4/CSD_INT.c ****     {
 561:Generated_Source\PSoC4/CSD_INT.c ****         /*  Declare and initialise ptr to sensor IO structure to appropriate address        */
 562:Generated_Source\PSoC4/CSD_INT.c ****         CSD_FLASH_IO_STRUCT const *curSnsIOPtr = (CSD_FLASH_IO_STRUCT const *)
 563:Generated_Source\PSoC4/CSD_INT.c ****                                                           CSD_dsFlash.wdgtArray[CSD_widgetIndex].pt
 564:Generated_Source\PSoC4/CSD_INT.c ****                                                           + CSD_sensorIndex;
 565:Generated_Source\PSoC4/CSD_INT.c **** 
 566:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_ENTRY_CALLBACK
 567:Generated_Source\PSoC4/CSD_INT.c ****             CSD_EntryCallback();
 568:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_ENTRY_CALLBACK */
 569:Generated_Source\PSoC4/CSD_INT.c **** 
 570:Generated_Source\PSoC4/CSD_INT.c ****         /* Clear pending interrupt */
 571:Generated_Source\PSoC4/CSD_INT.c ****         CY_SET_REG32(CSD_INTR_PTR, CSD_INTR_SET_MASK);
 572:Generated_Source\PSoC4/CSD_INT.c **** 
 573:Generated_Source\PSoC4/CSD_INT.c ****          /* Read Rawdata */
 574:Generated_Source\PSoC4/CSD_INT.c ****         CSD_SsCSDPostScan();
 575:Generated_Source\PSoC4/CSD_INT.c **** 
 576:Generated_Source\PSoC4/CSD_INT.c ****         /*  Connect Vref Buffer to AMUX bus */
 577:Generated_Source\PSoC4/CSD_INT.c ****         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CTANK_PRECHARGE_CONFIG_CSD_EN);
 578:Generated_Source\PSoC4/CSD_INT.c **** 
 579:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 580:Generated_Source\PSoC4/CSD_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 581:Generated_Source\PSoC4/CSD_INT.c ****             if (CSD_FREQ_CHANNEL_2 == CSD_scanFreqIndex)
 582:Generated_Source\PSoC4/CSD_INT.c ****             {
 583:Generated_Source\PSoC4/CSD_INT.c ****                 /* Disable sensor */
 584:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_CSDDisconnectSns(curSnsIOPtr);
 585:Generated_Source\PSoC4/CSD_INT.c ****             }
 586:Generated_Source\PSoC4/CSD_INT.c ****         #else
 587:Generated_Source\PSoC4/CSD_INT.c ****             /* Disable sensor */
 588:Generated_Source\PSoC4/CSD_INT.c ****             CSD_CSDDisconnectSns(curSnsIOPtr);
 589:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 590:Generated_Source\PSoC4/CSD_INT.c **** 
 591:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 592:Generated_Source\PSoC4/CSD_INT.c ****             if (CSD_FREQ_CHANNEL_2 > CSD_scanFreqIndex)
 593:Generated_Source\PSoC4/CSD_INT.c ****             {
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 12


 594:Generated_Source\PSoC4/CSD_INT.c ****                  /* Scan the next channel */
 595:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsNextFrequencyScan();
 596:Generated_Source\PSoC4/CSD_INT.c ****             }
 597:Generated_Source\PSoC4/CSD_INT.c ****             else
 598:Generated_Source\PSoC4/CSD_INT.c ****             {
 599:Generated_Source\PSoC4/CSD_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 600:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_scanFreqIndex = CSD_FREQ_CHANNEL_0;
 601:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsChangeImoFreq(CSD_FREQ_CHANNEL_0);
 602:Generated_Source\PSoC4/CSD_INT.c **** 
 603:Generated_Source\PSoC4/CSD_INT.c ****                  /* Scan the next sensor */
 604:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsInitNextScan();
 605:Generated_Source\PSoC4/CSD_INT.c ****             }
 606:Generated_Source\PSoC4/CSD_INT.c ****         #else
 607:Generated_Source\PSoC4/CSD_INT.c ****             /* Scan the next sensor */
 608:Generated_Source\PSoC4/CSD_INT.c ****             CSD_SsInitNextScan();
 609:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 610:Generated_Source\PSoC4/CSD_INT.c **** 
 611:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_EXIT_CALLBACK
 612:Generated_Source\PSoC4/CSD_INT.c ****             CSD_ExitCallback();
 613:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_EXIT_CALLBACK */
 614:Generated_Source\PSoC4/CSD_INT.c ****     }
 615:Generated_Source\PSoC4/CSD_INT.c **** 
 616:Generated_Source\PSoC4/CSD_INT.c **** 
 617:Generated_Source\PSoC4/CSD_INT.c ****     #if (CSD_ENABLE == CSD_CSD_GANGED_SNS_EN)
 618:Generated_Source\PSoC4/CSD_INT.c ****     /*******************************************************************************
 619:Generated_Source\PSoC4/CSD_INT.c ****     * Function Name: CSD_CSDPostMultiScanGanged
 620:Generated_Source\PSoC4/CSD_INT.c ****     ****************************************************************************//**
 621:Generated_Source\PSoC4/CSD_INT.c ****     *
 622:Generated_Source\PSoC4/CSD_INT.c ****     * \brief
 623:Generated_Source\PSoC4/CSD_INT.c ****     *  This is an internal ISR function for multiple sensor scanning 
 624:Generated_Source\PSoC4/CSD_INT.c ****     *  implementation for ganged sensors.
 625:Generated_Source\PSoC4/CSD_INT.c ****     *
 626:Generated_Source\PSoC4/CSD_INT.c ****     * \details
 627:Generated_Source\PSoC4/CSD_INT.c ****     *  This ISR handler is triggered when the user calls the
 628:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_Scan() API for a ganged sensor or the
 629:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_ScanAllWidgets() API in the project with ganged sensors.
 630:Generated_Source\PSoC4/CSD_INT.c ****     *
 631:Generated_Source\PSoC4/CSD_INT.c ****     *  The following tasks are performed:
 632:Generated_Source\PSoC4/CSD_INT.c ****     *    1. Disable the CSD interrupt
 633:Generated_Source\PSoC4/CSD_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 634:Generated_Source\PSoC4/CSD_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 635:Generated_Source\PSoC4/CSD_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 636:Generated_Source\PSoC4/CSD_INT.c ****     *    5. Update Scan Counter
 637:Generated_Source\PSoC4/CSD_INT.c ****     *    6. Reset the BUSY flag
 638:Generated_Source\PSoC4/CSD_INT.c ****     *    7. Enable the CSD interrupt.
 639:Generated_Source\PSoC4/CSD_INT.c ****     *
 640:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 641:Generated_Source\PSoC4/CSD_INT.c ****     *  widget has more than one sensor.
 642:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 643:Generated_Source\PSoC4/CSD_INT.c ****     *  CSD_ScanAllWidgets() APIs are called and the project has 
 644:Generated_Source\PSoC4/CSD_INT.c ****     *  more than one widget.
 645:Generated_Source\PSoC4/CSD_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next 
 646:Generated_Source\PSoC4/CSD_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 647:Generated_Source\PSoC4/CSD_INT.c ****     *
 648:Generated_Source\PSoC4/CSD_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 649:Generated_Source\PSoC4/CSD_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 650:Generated_Source\PSoC4/CSD_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 13


 651:Generated_Source\PSoC4/CSD_INT.c ****     *  for details.
 652:Generated_Source\PSoC4/CSD_INT.c ****     *
 653:Generated_Source\PSoC4/CSD_INT.c ****     *******************************************************************************/
 654:Generated_Source\PSoC4/CSD_INT.c ****     CY_ISR(CSD_CSDPostMultiScanGanged)
 655:Generated_Source\PSoC4/CSD_INT.c ****     {
 656:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_ENTRY_CALLBACK
 657:Generated_Source\PSoC4/CSD_INT.c ****             CSD_EntryCallback();
 658:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_ENTRY_CALLBACK */
 659:Generated_Source\PSoC4/CSD_INT.c **** 
 660:Generated_Source\PSoC4/CSD_INT.c ****         /* Clear pending interrupt */
 661:Generated_Source\PSoC4/CSD_INT.c ****         CY_SET_REG32(CSD_INTR_PTR, CSD_INTR_SET_MASK);
 662:Generated_Source\PSoC4/CSD_INT.c **** 
 663:Generated_Source\PSoC4/CSD_INT.c ****          /* Read Rawdata */
 664:Generated_Source\PSoC4/CSD_INT.c ****         CSD_SsCSDPostScan();
 665:Generated_Source\PSoC4/CSD_INT.c **** 
 666:Generated_Source\PSoC4/CSD_INT.c ****         /*  Connect Vref Buffer to AMUX bus */
 667:Generated_Source\PSoC4/CSD_INT.c ****         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CTANK_PRECHARGE_CONFIG_CSD_EN);
 668:Generated_Source\PSoC4/CSD_INT.c **** 
 669:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 670:Generated_Source\PSoC4/CSD_INT.c ****             if (CSD_FREQ_CHANNEL_2 == CSD_scanFreqIndex)
 671:Generated_Source\PSoC4/CSD_INT.c ****             {
 672:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsCSDDisconnectSnsExt((uint32)CSD_widgetIndex, (uint32)CSD_sensorIndex);
 673:Generated_Source\PSoC4/CSD_INT.c ****             }
 674:Generated_Source\PSoC4/CSD_INT.c ****         #else
 675:Generated_Source\PSoC4/CSD_INT.c ****             CSD_SsCSDDisconnectSnsExt((uint32)CSD_widgetIndex, (uint32)CSD_sensorIndex);
 676:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 677:Generated_Source\PSoC4/CSD_INT.c **** 
 678:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN)
 679:Generated_Source\PSoC4/CSD_INT.c ****             if (CSD_FREQ_CHANNEL_2 > CSD_scanFreqIndex)
 680:Generated_Source\PSoC4/CSD_INT.c ****             {
 681:Generated_Source\PSoC4/CSD_INT.c ****                  /* Scan the next channel */
 682:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsNextFrequencyScan();
 683:Generated_Source\PSoC4/CSD_INT.c ****             }
 684:Generated_Source\PSoC4/CSD_INT.c ****             else
 685:Generated_Source\PSoC4/CSD_INT.c ****             {
 686:Generated_Source\PSoC4/CSD_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 687:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_scanFreqIndex = CSD_FREQ_CHANNEL_0;
 688:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsChangeImoFreq(CSD_FREQ_CHANNEL_0);
 689:Generated_Source\PSoC4/CSD_INT.c **** 
 690:Generated_Source\PSoC4/CSD_INT.c ****                  /* Scan the next sensor */
 691:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsInitNextScan();
 692:Generated_Source\PSoC4/CSD_INT.c ****             }
 693:Generated_Source\PSoC4/CSD_INT.c ****         #else
 694:Generated_Source\PSoC4/CSD_INT.c ****              /* Scan the next sensor */
 695:Generated_Source\PSoC4/CSD_INT.c ****             CSD_SsInitNextScan();
 696:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 697:Generated_Source\PSoC4/CSD_INT.c **** 
 698:Generated_Source\PSoC4/CSD_INT.c ****         #ifdef CSD_EXIT_CALLBACK
 699:Generated_Source\PSoC4/CSD_INT.c ****             CSD_ExitCallback();
 700:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* CSD_EXIT_CALLBACK */
 701:Generated_Source\PSoC4/CSD_INT.c ****     }
 702:Generated_Source\PSoC4/CSD_INT.c ****     #endif /* (CSD_ENABLE == CSD_CSD_GANGED_SNS_EN) */
 703:Generated_Source\PSoC4/CSD_INT.c **** 
 704:Generated_Source\PSoC4/CSD_INT.c **** #endif /* (CSD_ENABLE == CSD_CSDV2) */
 705:Generated_Source\PSoC4/CSD_INT.c **** #endif /* ((CSD_ENABLE == CSD_CSD_EN) || (CSD_ENABLE == CSD_CSD_CSX_EN)) */
 706:Generated_Source\PSoC4/CSD_INT.c **** 
 707:Generated_Source\PSoC4/CSD_INT.c **** /** \}
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 14


 708:Generated_Source\PSoC4/CSD_INT.c ****  * \endif */
 709:Generated_Source\PSoC4/CSD_INT.c **** 
 710:Generated_Source\PSoC4/CSD_INT.c **** 
 711:Generated_Source\PSoC4/CSD_INT.c **** #if ((CSD_ENABLE == CSD_CSD_EN) || (CSD_ENABLE == CSD_CSD_CSX_EN))
 712:Generated_Source\PSoC4/CSD_INT.c **** 
 713:Generated_Source\PSoC4/CSD_INT.c **** /*******************************************************************************
 714:Generated_Source\PSoC4/CSD_INT.c **** * Function Name: CSD_SsCSDPostScan
 715:Generated_Source\PSoC4/CSD_INT.c **** ****************************************************************************//**
 716:Generated_Source\PSoC4/CSD_INT.c **** *
 717:Generated_Source\PSoC4/CSD_INT.c **** * \brief
 718:Generated_Source\PSoC4/CSD_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 719:Generated_Source\PSoC4/CSD_INT.c **** *
 720:Generated_Source\PSoC4/CSD_INT.c **** * \details
 721:Generated_Source\PSoC4/CSD_INT.c **** *   This function performs following tasks after scan:
 722:Generated_Source\PSoC4/CSD_INT.c **** *   - Reads SlotResult from Raw Counter;
 723:Generated_Source\PSoC4/CSD_INT.c **** *   - Inits bad Conversions number;
 724:Generated_Source\PSoC4/CSD_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 725:Generated_Source\PSoC4/CSD_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 726:Generated_Source\PSoC4/CSD_INT.c **** *   - Opens HCBV and HCBG switches.
 727:Generated_Source\PSoC4/CSD_INT.c **** *
 728:Generated_Source\PSoC4/CSD_INT.c **** *******************************************************************************/
 729:Generated_Source\PSoC4/CSD_INT.c **** CY_INLINE static void CSD_SsCSDPostScan(void)
 730:Generated_Source\PSoC4/CSD_INT.c **** {
 731:Generated_Source\PSoC4/CSD_INT.c ****     #if (CSD_ENABLE == CSD_CSDV2)
 732:Generated_Source\PSoC4/CSD_INT.c **** 
 733:Generated_Source\PSoC4/CSD_INT.c ****         uint32 tmpRawData;
 734:Generated_Source\PSoC4/CSD_INT.c ****         uint32 tmpMaxCount;
 735:Generated_Source\PSoC4/CSD_INT.c ****         CSD_RAM_WD_BASE_STRUCT const *ptrWdgt = (CSD_RAM_WD_BASE_STRUCT *)
 736:Generated_Source\PSoC4/CSD_INT.c ****                                             CSD_dsFlash.wdgtArray[CSD_widgetIndex].ptr2WdgtRam;
  35              		.loc 1 736 0
  36 0008 144B     		ldr	r3, .L4+4
  37 000a 1A78     		ldrb	r2, [r3]
 735:Generated_Source\PSoC4/CSD_INT.c ****                                             CSD_dsFlash.wdgtArray[CSD_widgetIndex].ptr2WdgtRam;
  38              		.loc 1 735 0
  39 000c D300     		lsl	r3, r2, #3
  40 000e 9B1A     		sub	r3, r3, r2
  41 0010 9B00     		lsl	r3, r3, #2
  42 0012 134A     		ldr	r2, .L4+8
  43 0014 D318     		add	r3, r2, r3
  44 0016 5B68     		ldr	r3, [r3, #4]
  45              	.LVL0:
 737:Generated_Source\PSoC4/CSD_INT.c **** 
 738:Generated_Source\PSoC4/CSD_INT.c ****         /* Read SlotResult from Raw Counter */
 739:Generated_Source\PSoC4/CSD_INT.c ****         tmpRawData = CSD_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CSD_COUNTER_PTR);
  46              		.loc 1 739 0
  47 0018 124A     		ldr	r2, .L4+12
  48 001a 1268     		ldr	r2, [r2]
  49 001c 1204     		lsl	r2, r2, #16
  50 001e 120C     		lsr	r2, r2, #16
  51              	.LVL1:
 740:Generated_Source\PSoC4/CSD_INT.c **** 
 741:Generated_Source\PSoC4/CSD_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
  52              		.loc 1 741 0
  53 0020 1988     		ldrh	r1, [r3]
  54 0022 0123     		mov	r3, #1
  55              	.LVL2:
  56 0024 8B40     		lsl	r3, r3, r1
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 15


  57 0026 013B     		sub	r3, r3, #1
  58              	.LVL3:
 742:Generated_Source\PSoC4/CSD_INT.c ****         if(tmpRawData < tmpMaxCount)
  59              		.loc 1 742 0
  60 0028 9A42     		cmp	r2, r3
  61 002a 06D2     		bcs	.L2
 743:Generated_Source\PSoC4/CSD_INT.c ****         {
 744:Generated_Source\PSoC4/CSD_INT.c ****             CSD_curRamSnsPtr->raw[CSD_scanFreqIndex] = LO16(tmpRawData);
  62              		.loc 1 744 0
  63 002c 0E4B     		ldr	r3, .L4+16
  64              	.LVL4:
  65 002e 1968     		ldr	r1, [r3]
  66              	.LVL5:
  67 0030 0E4B     		ldr	r3, .L4+20
  68 0032 1B78     		ldrb	r3, [r3]
  69 0034 5B00     		lsl	r3, r3, #1
  70 0036 CA52     		strh	r2, [r1, r3]
  71 0038 05E0     		b	.L3
  72              	.LVL6:
  73              	.L2:
 745:Generated_Source\PSoC4/CSD_INT.c ****         }
 746:Generated_Source\PSoC4/CSD_INT.c ****         else
 747:Generated_Source\PSoC4/CSD_INT.c ****         {
 748:Generated_Source\PSoC4/CSD_INT.c ****             CSD_curRamSnsPtr->raw[CSD_scanFreqIndex] = LO16(tmpMaxCount);
  74              		.loc 1 748 0
  75 003a 0B4A     		ldr	r2, .L4+16
  76              	.LVL7:
  77 003c 1168     		ldr	r1, [r2]
  78 003e 0B4A     		ldr	r2, .L4+20
  79 0040 1278     		ldrb	r2, [r2]
  80 0042 5200     		lsl	r2, r2, #1
  81 0044 8B52     		strh	r3, [r1, r2]
  82              	.LVL8:
  83              	.L3:
  84              	.LBE5:
  85              	.LBE4:
 179:Generated_Source\PSoC4/CSD_INT.c **** 
  86              		.loc 1 179 0
  87 0046 0A4B     		ldr	r3, .L4+24
  88 0048 DA88     		ldrh	r2, [r3, #6]
  89 004a 0132     		add	r2, r2, #1
  90 004c DA80     		strh	r2, [r3, #6]
 182:Generated_Source\PSoC4/CSD_INT.c ****                 }
  91              		.loc 1 182 0
  92 004e 094A     		ldr	r2, .L4+28
  93 0050 9968     		ldr	r1, [r3, #8]
  94 0052 0A40     		and	r2, r1
  95 0054 9A60     		str	r2, [r3, #8]
 192:Generated_Source\PSoC4/CSD_INT.c **** 
  96              		.loc 1 192 0
  97              		@ sp needed
  98 0056 7047     		bx	lr
  99              	.L5:
 100              		.align	2
 101              	.L4:
 102 0058 F0000C40 		.word	1074528496
 103 005c 00000000 		.word	CSD_widgetIndex
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 16


 104 0060 00000000 		.word	CSD_dsFlash
 105 0064 D0000C40 		.word	1074528464
 106 0068 00000000 		.word	CSD_curRamSnsPtr
 107 006c 00000000 		.word	CSD_scanFreqIndex
 108 0070 00000000 		.word	CSD_dsRam
 109 0074 7FFFFEFF 		.word	-65665
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	CSD_CSDPostSingleScan, .-CSD_CSDPostSingleScan
 113              		.section	.text.CSD_CSDPostMultiScan,"ax",%progbits
 114              		.align	2
 115              		.global	CSD_CSDPostMultiScan
 116              		.code	16
 117              		.thumb_func
 118              		.type	CSD_CSDPostMultiScan, %function
 119              	CSD_CSDPostMultiScan:
 120              	.LFB2:
 231:Generated_Source\PSoC4/CSD_INT.c ****         /*  Declare and initialise ptr to sensor IO structure to appropriate address        */
 121              		.loc 1 231 0
 122              		.cfi_startproc
 123 0000 38B5     		push	{r3, r4, r5, lr}
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 3, -16
 126              		.cfi_offset 4, -12
 127              		.cfi_offset 5, -8
 128              		.cfi_offset 14, -4
 233:Generated_Source\PSoC4/CSD_INT.c ****                                                           CSD_dsFlash.wdgtArray[CSD_widgetIndex].pt
 129              		.loc 1 233 0
 130 0002 3C4B     		ldr	r3, .L12
 131 0004 1978     		ldrb	r1, [r3]
 234:Generated_Source\PSoC4/CSD_INT.c ****                                                           + CSD_sensorIndex;
 132              		.loc 1 234 0
 133 0006 3C4C     		ldr	r4, .L12+4
 134 0008 CA00     		lsl	r2, r1, #3
 135 000a 521A     		sub	r2, r2, r1
 136 000c 9200     		lsl	r2, r2, #2
 137 000e 1059     		ldr	r0, [r2, r4]
 235:Generated_Source\PSoC4/CSD_INT.c **** 
 138              		.loc 1 235 0
 139 0010 3A4A     		ldr	r2, .L12+8
 140 0012 1578     		ldrb	r5, [r2]
 141 0014 E900     		lsl	r1, r5, #3
 142 0016 4A1B     		sub	r2, r1, r5
 143 0018 9200     		lsl	r2, r2, #2
 233:Generated_Source\PSoC4/CSD_INT.c ****                                                           CSD_dsFlash.wdgtArray[CSD_widgetIndex].pt
 144              		.loc 1 233 0
 145 001a 8018     		add	r0, r0, r2
 146              	.LVL9:
 242:Generated_Source\PSoC4/CSD_INT.c **** 
 147              		.loc 1 242 0
 148 001c 8321     		mov	r1, #131
 149 001e 4900     		lsl	r1, r1, #1
 150 0020 374A     		ldr	r2, .L12+12
 151 0022 1160     		str	r1, [r2]
 152              	.LBB10:
 153              	.LBB11:
 736:Generated_Source\PSoC4/CSD_INT.c **** 
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 17


 154              		.loc 1 736 0
 155 0024 1B78     		ldrb	r3, [r3]
 735:Generated_Source\PSoC4/CSD_INT.c ****                                             CSD_dsFlash.wdgtArray[CSD_widgetIndex].ptr2WdgtRam;
 156              		.loc 1 735 0
 157 0026 DA00     		lsl	r2, r3, #3
 158 0028 D31A     		sub	r3, r2, r3
 159 002a 9B00     		lsl	r3, r3, #2
 160 002c E318     		add	r3, r4, r3
 161 002e 5B68     		ldr	r3, [r3, #4]
 162              	.LVL10:
 739:Generated_Source\PSoC4/CSD_INT.c **** 
 163              		.loc 1 739 0
 164 0030 344A     		ldr	r2, .L12+16
 165 0032 1268     		ldr	r2, [r2]
 166 0034 1204     		lsl	r2, r2, #16
 167 0036 120C     		lsr	r2, r2, #16
 168              	.LVL11:
 741:Generated_Source\PSoC4/CSD_INT.c ****         if(tmpRawData < tmpMaxCount)
 169              		.loc 1 741 0
 170 0038 1988     		ldrh	r1, [r3]
 171 003a 0123     		mov	r3, #1
 172              	.LVL12:
 173 003c 8B40     		lsl	r3, r3, r1
 174 003e 013B     		sub	r3, r3, #1
 175              	.LVL13:
 742:Generated_Source\PSoC4/CSD_INT.c ****         {
 176              		.loc 1 742 0
 177 0040 9A42     		cmp	r2, r3
 178 0042 06D2     		bcs	.L7
 744:Generated_Source\PSoC4/CSD_INT.c ****         }
 179              		.loc 1 744 0
 180 0044 304B     		ldr	r3, .L12+20
 181              	.LVL14:
 182 0046 1968     		ldr	r1, [r3]
 183              	.LVL15:
 184 0048 304B     		ldr	r3, .L12+24
 185 004a 1B78     		ldrb	r3, [r3]
 186 004c 5B00     		lsl	r3, r3, #1
 187 004e CA52     		strh	r2, [r1, r3]
 188 0050 05E0     		b	.L8
 189              	.LVL16:
 190              	.L7:
 191              		.loc 1 748 0
 192 0052 2D4A     		ldr	r2, .L12+20
 193              	.LVL17:
 194 0054 1168     		ldr	r1, [r2]
 195 0056 2D4A     		ldr	r2, .L12+24
 196 0058 1278     		ldrb	r2, [r2]
 197 005a 5200     		lsl	r2, r2, #1
 198 005c 8B52     		strh	r3, [r1, r2]
 199              	.LVL18:
 200              	.L8:
 201              	.LBE11:
 202              	.LBE10:
 273:Generated_Source\PSoC4/CSD_INT.c ****             #endif /* (CSD_ENABLE == CSD_MULTI_FREQ_SCAN_EN) */
 203              		.loc 1 273 0
 204 005e FFF7FEFF 		bl	CSD_CSDDisconnectSns
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 18


 205              	.LVL19:
 206              	.LBB12:
 207              	.LBB13:
 749:Generated_Source\PSoC4/CSD_INT.c ****         }
 750:Generated_Source\PSoC4/CSD_INT.c **** 
 751:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN)
 752:Generated_Source\PSoC4/CSD_INT.c ****             /*  Init bad Conversions number */
 753:Generated_Source\PSoC4/CSD_INT.c ****             CSD_badConversionsNum = CSD_BAD_CONVERSIONS_NUM;
 754:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_CSD_NOISE_METRIC_EN) */
 755:Generated_Source\PSoC4/CSD_INT.c **** 
 756:Generated_Source\PSoC4/CSD_INT.c ****         #if ((CSD_ENABLE == CSD_CSD_SHIELD_EN) && \
 757:Generated_Source\PSoC4/CSD_INT.c ****              (CSD_2000_MV <= CSD_CYDEV_VDDA_MV))
 758:Generated_Source\PSoC4/CSD_INT.c ****             /*  Disconnect Vrefhi from AMUBUF positive input. Disconnect AMUBUF output from CSDBUSB
 759:Generated_Source\PSoC4/CSD_INT.c ****             CY_SET_REG32(CSD_SW_AMUXBUF_SEL_PTR, CSD_SW_AMUXBUF_SEL_SW_DEFAULT);
 760:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* ((CSD_ENABLE == CSD_CSD_SHIELD_EN) && \
 761:Generated_Source\PSoC4/CSD_INT.c ****                    (CSD_2000_MV <= CSD_CYDEV_VDDA_MV)) */
 762:Generated_Source\PSoC4/CSD_INT.c **** 
 763:Generated_Source\PSoC4/CSD_INT.c ****         #if (CSD_ENABLE == CSD_CSD_SHIELD_EN)
 764:Generated_Source\PSoC4/CSD_INT.c ****             /* Open HCBV and HCBG switches */
 765:Generated_Source\PSoC4/CSD_INT.c ****             CY_SET_REG32(CSD_SW_SHIELD_SEL_PTR, CSD_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN |
 766:Generated_Source\PSoC4/CSD_INT.c ****                                                              CSD_SW_SHIELD_SEL_SW_HCBG_STATIC_OPEN)
 767:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* (CSD_ENABLE == CSD_CSD_SHIELD_EN) */
 768:Generated_Source\PSoC4/CSD_INT.c **** 
 769:Generated_Source\PSoC4/CSD_INT.c ****     #else
 770:Generated_Source\PSoC4/CSD_INT.c **** 
 771:Generated_Source\PSoC4/CSD_INT.c ****         /* Read SlotResult from Raw Counter */
 772:Generated_Source\PSoC4/CSD_INT.c ****        CSD_curRamSnsPtr->raw[CSD_scanFreqIndex] = (uint16)CY_GET_REG32(CSD_COUNTER_PTR);
 773:Generated_Source\PSoC4/CSD_INT.c **** 
 774:Generated_Source\PSoC4/CSD_INT.c ****     #endif /* (CSD_ENABLE == CSD_CSDV2) */
 775:Generated_Source\PSoC4/CSD_INT.c **** }
 776:Generated_Source\PSoC4/CSD_INT.c **** 
 777:Generated_Source\PSoC4/CSD_INT.c **** 
 778:Generated_Source\PSoC4/CSD_INT.c **** /*******************************************************************************
 779:Generated_Source\PSoC4/CSD_INT.c **** * Function Name: CSD_SsInitNextScan
 780:Generated_Source\PSoC4/CSD_INT.c **** ****************************************************************************//**
 781:Generated_Source\PSoC4/CSD_INT.c **** *
 782:Generated_Source\PSoC4/CSD_INT.c **** * \brief
 783:Generated_Source\PSoC4/CSD_INT.c **** *   This function initializes the next sensor scan.
 784:Generated_Source\PSoC4/CSD_INT.c **** *
 785:Generated_Source\PSoC4/CSD_INT.c **** * \details
 786:Generated_Source\PSoC4/CSD_INT.c **** *   The function decrements the sensor index, updates sense clock for matrix
 787:Generated_Source\PSoC4/CSD_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 788:Generated_Source\PSoC4/CSD_INT.c **** *   scans it. When all sensors are scanned it continues to set up the next widget
 789:Generated_Source\PSoC4/CSD_INT.c **** *   until all widgets are scanned. The CSD block is disabled when all widgets are
 790:Generated_Source\PSoC4/CSD_INT.c **** *   scanned.
 791:Generated_Source\PSoC4/CSD_INT.c **** *
 792:Generated_Source\PSoC4/CSD_INT.c **** *******************************************************************************/
 793:Generated_Source\PSoC4/CSD_INT.c **** CY_INLINE static void CSD_SsInitNextScan(void)
 794:Generated_Source\PSoC4/CSD_INT.c **** {
 795:Generated_Source\PSoC4/CSD_INT.c ****     /*  Declare and initialise ptr to widget and sensor structures to appropriate address */
 796:Generated_Source\PSoC4/CSD_INT.c ****     #if (((CSD_ENABLE == CSD_CSD_IDAC_COMP_EN) || \
 797:Generated_Source\PSoC4/CSD_INT.c ****              (CSD_ENABLE == (CSD_CSD_MATRIX_WIDGET_EN | CSD_CSD_TOUCHPAD_WIDGET_EN))) || \
 798:Generated_Source\PSoC4/CSD_INT.c ****          (((CSD_DISABLE == CSD_CSD_COMMON_SNS_CLK_EN) && \
 799:Generated_Source\PSoC4/CSD_INT.c ****            (CSD_ENABLE == CSD_CSDV2) && \
 800:Generated_Source\PSoC4/CSD_INT.c ****           (CSD_ENABLE == (CSD_CSD_MATRIX_WIDGET_EN | CSD_CSD_TOUCHPAD_WIDGET_EN)))))
 801:Generated_Source\PSoC4/CSD_INT.c ****         CSD_RAM_WD_BASE_STRUCT *ptrWdgt = (CSD_RAM_WD_BASE_STRUCT *)
 802:Generated_Source\PSoC4/CSD_INT.c ****                                                         CSD_dsFlash.wdgtArray[CSD_widgetIndex].ptr2
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 19


 208              		.loc 1 802 0
 209 0062 244B     		ldr	r3, .L12
 210 0064 1878     		ldrb	r0, [r3]
 801:Generated_Source\PSoC4/CSD_INT.c ****                                                         CSD_dsFlash.wdgtArray[CSD_widgetIndex].ptr2
 211              		.loc 1 801 0
 212 0066 2449     		ldr	r1, .L12+4
 213 0068 C200     		lsl	r2, r0, #3
 214 006a 121A     		sub	r2, r2, r0
 215 006c 9200     		lsl	r2, r2, #2
 216 006e 8A18     		add	r2, r1, r2
 217 0070 5068     		ldr	r0, [r2, #4]
 218              	.LVL20:
 803:Generated_Source\PSoC4/CSD_INT.c ****     #endif /* ((((CSD_ENABLE == CSD_CSD_IDAC_COMP_EN) && \
 804:Generated_Source\PSoC4/CSD_INT.c ****                (CSD_ENABLE == (CSD_CSD_MATRIX_WIDGET_EN | CSD_CSD_TOUCHPAD_WIDGET_EN)))) || \
 805:Generated_Source\PSoC4/CSD_INT.c ****                (((CSD_DISABLE == CSD_CSD_COMMON_SNS_CLK_EN) && \
 806:Generated_Source\PSoC4/CSD_INT.c ****                (CSD_ENABLE == (CSD_CSD_MATRIX_WIDGET_EN | CSD_CSD_TOUCHPAD_WIDGET_EN))) && \
 807:Generated_Source\PSoC4/CSD_INT.c ****                (CSD_CLK_SOURCE_DIRECT == CSD_CSD_SNS_CLK_SOURCE))) */
 808:Generated_Source\PSoC4/CSD_INT.c **** 
 809:Generated_Source\PSoC4/CSD_INT.c ****     /* Check if all sensors are scanned in widget */
 810:Generated_Source\PSoC4/CSD_INT.c ****     if (((uint8)CSD_dsFlash.wdgtArray[(CSD_widgetIndex)].totalNumSns - 1u) > CSD_sensorIndex)
 219              		.loc 1 810 0
 220 0072 1B78     		ldrb	r3, [r3]
 221 0074 DA00     		lsl	r2, r3, #3
 222 0076 D31A     		sub	r3, r2, r3
 223 0078 9B00     		lsl	r3, r3, #2
 224 007a CB18     		add	r3, r1, r3
 225 007c 9B7D     		ldrb	r3, [r3, #22]
 226 007e 1F4A     		ldr	r2, .L12+8
 227 0080 1278     		ldrb	r2, [r2]
 228 0082 013B     		sub	r3, r3, #1
 229 0084 9342     		cmp	r3, r2
 230 0086 1DD9     		bls	.L9
 811:Generated_Source\PSoC4/CSD_INT.c ****     {
 812:Generated_Source\PSoC4/CSD_INT.c ****         /*  Decrement snsIndex to configure next sensor in widget */
 813:Generated_Source\PSoC4/CSD_INT.c ****         CSD_sensorIndex++;
 231              		.loc 1 813 0
 232 0088 1C4C     		ldr	r4, .L12+8
 233 008a 2378     		ldrb	r3, [r4]
 234 008c 0133     		add	r3, r3, #1
 235 008e DBB2     		uxtb	r3, r3
 236 0090 2370     		strb	r3, [r4]
 814:Generated_Source\PSoC4/CSD_INT.c **** 
 815:Generated_Source\PSoC4/CSD_INT.c ****         /*  Update global pointer to CSD_RAM_SNS_STRUCT to current sensor  */
 816:Generated_Source\PSoC4/CSD_INT.c ****         CSD_curRamSnsPtr = (CSD_RAM_SNS_STRUCT *)
 817:Generated_Source\PSoC4/CSD_INT.c ****                                                   CSD_dsFlash.wdgtArray[CSD_widgetIndex].ptr2SnsRam
 237              		.loc 1 817 0
 238 0092 184D     		ldr	r5, .L12
 239 0094 2A78     		ldrb	r2, [r5]
 240 0096 D300     		lsl	r3, r2, #3
 241 0098 9B1A     		sub	r3, r3, r2
 242 009a 9B00     		lsl	r3, r3, #2
 243 009c CB18     		add	r3, r1, r3
 244 009e 9968     		ldr	r1, [r3, #8]
 818:Generated_Source\PSoC4/CSD_INT.c ****                                                   + CSD_sensorIndex;
 245              		.loc 1 818 0
 246 00a0 2278     		ldrb	r2, [r4]
 247 00a2 9300     		lsl	r3, r2, #2
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 20


 248 00a4 9B18     		add	r3, r3, r2
 249 00a6 5B00     		lsl	r3, r3, #1
 250 00a8 CB18     		add	r3, r1, r3
 816:Generated_Source\PSoC4/CSD_INT.c ****                                                   CSD_dsFlash.wdgtArray[CSD_widgetIndex].ptr2SnsRam
 251              		.loc 1 816 0
 252 00aa 174A     		ldr	r2, .L12+20
 253 00ac 1360     		str	r3, [r2]
 819:Generated_Source\PSoC4/CSD_INT.c **** 
 820:Generated_Source\PSoC4/CSD_INT.c ****         /* Configure clock divider to row or column */
 821:Generated_Source\PSoC4/CSD_INT.c ****         #if ((CSD_DISABLE == CSD_CSD_COMMON_SNS_CLK_EN) && \
 822:Generated_Source\PSoC4/CSD_INT.c ****              (CSD_ENABLE == (CSD_CSD_MATRIX_WIDGET_EN | CSD_CSD_TOUCHPAD_WIDGET_EN)))
 823:Generated_Source\PSoC4/CSD_INT.c ****             if ((CSD_WD_TOUCHPAD_E == (CSD_WD_TYPE_ENUM)CSD_dsFlash.wdgtArray[(CSD_widgetIndex)].wd
 824:Generated_Source\PSoC4/CSD_INT.c ****                 (CSD_WD_MATRIX_BUTTON_E == (CSD_WD_TYPE_ENUM)CSD_dsFlash.wdgtArray[(CSD_widgetIndex
 825:Generated_Source\PSoC4/CSD_INT.c ****             {
 826:Generated_Source\PSoC4/CSD_INT.c ****                 CSD_SsCSDConfigClock();
 827:Generated_Source\PSoC4/CSD_INT.c **** 
 828:Generated_Source\PSoC4/CSD_INT.c ****                 #if (CSD_ENABLE == CSD_CSDV2)
 829:Generated_Source\PSoC4/CSD_INT.c ****                      /* Set up scanning resolution */
 830:Generated_Source\PSoC4/CSD_INT.c ****                     CSD_SsCSDCalculateScanDuration(ptrWdgt);
 831:Generated_Source\PSoC4/CSD_INT.c ****                 #endif /* (CSD_ENABLE == CSD_CSDV2) */
 832:Generated_Source\PSoC4/CSD_INT.c ****             }
 833:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* ((CSD_DISABLE == CSD_CSD_COMMON_SNS_CLK_EN) && \
 834:Generated_Source\PSoC4/CSD_INT.c ****                    (CSD_ENABLE == (CSD_CSD_MATRIX_WIDGET_EN | CSD_CSD_TOUCHPAD_WIDGET_EN)))) */
 835:Generated_Source\PSoC4/CSD_INT.c **** 
 836:Generated_Source\PSoC4/CSD_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 837:Generated_Source\PSoC4/CSD_INT.c ****         #if ((CSD_ENABLE == CSD_CSD_IDAC_COMP_EN) || \
 838:Generated_Source\PSoC4/CSD_INT.c ****              (CSD_ENABLE == (CSD_CSD_MATRIX_WIDGET_EN | CSD_CSD_TOUCHPAD_WIDGET_EN)))
 839:Generated_Source\PSoC4/CSD_INT.c ****             CSD_SsCSDSetUpIdacs(ptrWdgt);
 254              		.loc 1 839 0
 255 00ae FFF7FEFF 		bl	CSD_SsCSDSetUpIdacs
 256              	.LVL21:
 840:Generated_Source\PSoC4/CSD_INT.c ****         #endif /* ((CSD_ENABLE == CSD_CSD_IDAC_COMP_EN) || \
 841:Generated_Source\PSoC4/CSD_INT.c ****              (CSD_ENABLE == (CSD_CSD_MATRIX_WIDGET_EN | CSD_CSD_TOUCHPAD_WIDGET_EN)))*/
 842:Generated_Source\PSoC4/CSD_INT.c **** 
 843:Generated_Source\PSoC4/CSD_INT.c ****         /* Enable sensor */
 844:Generated_Source\PSoC4/CSD_INT.c ****         CSD_SsCSDConnectSensorExt((uint32)CSD_widgetIndex, (uint32)CSD_sensorIndex);
 257              		.loc 1 844 0
 258 00b2 2878     		ldrb	r0, [r5]
 259 00b4 C0B2     		uxtb	r0, r0
 260 00b6 2178     		ldrb	r1, [r4]
 261 00b8 C9B2     		uxtb	r1, r1
 262 00ba FFF7FEFF 		bl	CSD_SsCSDConnectSensorExt
 263              	.LVL22:
 845:Generated_Source\PSoC4/CSD_INT.c **** 
 846:Generated_Source\PSoC4/CSD_INT.c ****         /* Proceed scanning */
 847:Generated_Source\PSoC4/CSD_INT.c ****         CSD_SsCSDStartSample();
 264              		.loc 1 847 0
 265 00be FFF7FEFF 		bl	CSD_SsCSDStartSample
 266              	.LVL23:
 267 00c2 15E0     		b	.L6
 268              	.LVL24:
 269              	.L9:
 848:Generated_Source\PSoC4/CSD_INT.c ****     }
 849:Generated_Source\PSoC4/CSD_INT.c ****     /*    Call scan next widget API if requested, if not, complete the scan  */
 850:Generated_Source\PSoC4/CSD_INT.c ****     else
 851:Generated_Source\PSoC4/CSD_INT.c ****     {
 852:Generated_Source\PSoC4/CSD_INT.c ****         CSD_sensorIndex = 0u;
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 21


 270              		.loc 1 852 0
 271 00c4 0022     		mov	r2, #0
 272 00c6 0D4B     		ldr	r3, .L12+8
 273 00c8 1A70     		strb	r2, [r3]
 853:Generated_Source\PSoC4/CSD_INT.c **** 
 854:Generated_Source\PSoC4/CSD_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 855:Generated_Source\PSoC4/CSD_INT.c ****         CSD_dsRam.status &= ~CSD_WDGT_SW_STS_BUSY;
 274              		.loc 1 855 0
 275 00ca 114A     		ldr	r2, .L12+28
 276 00cc 114B     		ldr	r3, .L12+32
 277 00ce 9168     		ldr	r1, [r2, #8]
 278 00d0 0B40     		and	r3, r1
 279 00d2 9360     		str	r3, [r2, #8]
 856:Generated_Source\PSoC4/CSD_INT.c **** 
 857:Generated_Source\PSoC4/CSD_INT.c ****         /* Check if all widgets have been scanned */
 858:Generated_Source\PSoC4/CSD_INT.c ****         if (CSD_ENABLE == CSD_requestScanAllWidget)
 280              		.loc 1 858 0
 281 00d4 104A     		ldr	r2, .L12+36
 282 00d6 1278     		ldrb	r2, [r2]
 283 00d8 012A     		cmp	r2, #1
 284 00da 02D1     		bne	.L11
 859:Generated_Source\PSoC4/CSD_INT.c ****         {
 860:Generated_Source\PSoC4/CSD_INT.c ****             /* Configure and begin scanning next widget */
 861:Generated_Source\PSoC4/CSD_INT.c ****             CSD_SsPostAllWidgetsScan();
 285              		.loc 1 861 0
 286 00dc FFF7FEFF 		bl	CSD_SsPostAllWidgetsScan
 287              	.LVL25:
 288 00e0 06E0     		b	.L6
 289              	.LVL26:
 290              	.L11:
 862:Generated_Source\PSoC4/CSD_INT.c ****         }
 863:Generated_Source\PSoC4/CSD_INT.c ****         else
 864:Generated_Source\PSoC4/CSD_INT.c ****         {
 865:Generated_Source\PSoC4/CSD_INT.c ****             #if (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN)
 866:Generated_Source\PSoC4/CSD_INT.c ****                 #if (CSD_ENABLE == CSD_CSDV2)
 867:Generated_Source\PSoC4/CSD_INT.c ****                     /*  Disable the CSD block */
 868:Generated_Source\PSoC4/CSD_INT.c ****                     CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd);
 869:Generated_Source\PSoC4/CSD_INT.c ****                 #else
 870:Generated_Source\PSoC4/CSD_INT.c ****                     /*  Disable the CSD block. Connect Vref Buffer to AMUX bus */
 871:Generated_Source\PSoC4/CSD_INT.c ****                     #if ((CSD_CSH_PRECHARGE_IO_BUF == CSD_CSD_CSH_PRECHARGE_SRC) &&\
 872:Generated_Source\PSoC4/CSD_INT.c ****                          (CSD_ENABLE == CSD_CSD_SHIELD_TANK_EN))
 873:Generated_Source\PSoC4/CSD_INT.c ****                         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CMOD_PRECHARGE_CONFIG);
 874:Generated_Source\PSoC4/CSD_INT.c ****                     #else
 875:Generated_Source\PSoC4/CSD_INT.c ****                         CY_SET_REG32(CSD_CONFIG_PTR, CSD_configCsd | CSD_CTANK_PRECHARGE_CONFIG);
 876:Generated_Source\PSoC4/CSD_INT.c ****                     #endif /* ((CSD_CSH_PRECHARGE_IO_BUF == CSD_CSD_CSH_PRECHARGE_SRC) &&\
 877:Generated_Source\PSoC4/CSD_INT.c ****                                (CSD_ENABLE == CSD_CSD_SHIELD_TANK_EN)) */
 878:Generated_Source\PSoC4/CSD_INT.c ****                 #endif /* (CSD_ENABLE == CSD_CSDV2) */
 879:Generated_Source\PSoC4/CSD_INT.c ****             #endif /* (CSD_ENABLE == CSD_BLOCK_OFF_AFTER_SCAN_EN) */
 880:Generated_Source\PSoC4/CSD_INT.c **** 
 881:Generated_Source\PSoC4/CSD_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 882:Generated_Source\PSoC4/CSD_INT.c ****             CSD_dsRam.status &= ~CSD_SW_STS_BUSY;
 291              		.loc 1 882 0
 292 00e2 0B4A     		ldr	r2, .L12+28
 293 00e4 8021     		mov	r1, #128
 294 00e6 8B43     		bic	r3, r1
 295 00e8 9360     		str	r3, [r2, #8]
 883:Generated_Source\PSoC4/CSD_INT.c **** 
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 22


 884:Generated_Source\PSoC4/CSD_INT.c ****             /* Update scan Counter */
 885:Generated_Source\PSoC4/CSD_INT.c ****             CSD_dsRam.scanCounter++;
 296              		.loc 1 885 0
 297 00ea D388     		ldrh	r3, [r2, #6]
 298 00ec 0133     		add	r3, r3, #1
 299 00ee D380     		strh	r3, [r2, #6]
 300              	.LVL27:
 301              	.L6:
 302              	.LBE13:
 303              	.LBE12:
 302:Generated_Source\PSoC4/CSD_INT.c **** 
 304              		.loc 1 302 0
 305              		@ sp needed
 306 00f0 38BD     		pop	{r3, r4, r5, pc}
 307              	.L13:
 308 00f2 C046     		.align	2
 309              	.L12:
 310 00f4 00000000 		.word	CSD_widgetIndex
 311 00f8 00000000 		.word	CSD_dsFlash
 312 00fc 00000000 		.word	CSD_sensorIndex
 313 0100 F0000C40 		.word	1074528496
 314 0104 D0000C40 		.word	1074528464
 315 0108 00000000 		.word	CSD_curRamSnsPtr
 316 010c 00000000 		.word	CSD_scanFreqIndex
 317 0110 00000000 		.word	CSD_dsRam
 318 0114 FFFFFEFF 		.word	-65537
 319 0118 00000000 		.word	CSD_requestScanAllWidget
 320              		.cfi_endproc
 321              	.LFE2:
 322              		.size	CSD_CSDPostMultiScan, .-CSD_CSDPostMultiScan
 323              		.text
 324              	.Letext0:
 325              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 326              		.file 3 "Generated_Source\\PSoC4\\CSD_Configuration.h"
 327              		.file 4 "Generated_Source\\PSoC4\\CSD_Structure.h"
 328              		.file 5 "Generated_Source\\PSoC4\\CSD_Sensing.h"
 329              		.file 6 "Generated_Source\\PSoC4\\CSD_SensingCSD_LL.h"
 330              		.section	.debug_info,"",%progbits
 331              	.Ldebug_info0:
 332 0000 4F070000 		.4byte	0x74f
 333 0004 0400     		.2byte	0x4
 334 0006 00000000 		.4byte	.Ldebug_abbrev0
 335 000a 04       		.byte	0x4
 336 000b 01       		.uleb128 0x1
 337 000c A9050000 		.4byte	.LASF98
 338 0010 01       		.byte	0x1
 339 0011 59050000 		.4byte	.LASF99
 340 0015 51000000 		.4byte	.LASF100
 341 0019 00000000 		.4byte	.Ldebug_ranges0+0
 342 001d 00000000 		.4byte	0
 343 0021 00000000 		.4byte	.Ldebug_line0
 344 0025 02       		.uleb128 0x2
 345 0026 01       		.byte	0x1
 346 0027 06       		.byte	0x6
 347 0028 33010000 		.4byte	.LASF0
 348 002c 02       		.uleb128 0x2
 349 002d 01       		.byte	0x1
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 23


 350 002e 08       		.byte	0x8
 351 002f BC030000 		.4byte	.LASF1
 352 0033 02       		.uleb128 0x2
 353 0034 02       		.byte	0x2
 354 0035 05       		.byte	0x5
 355 0036 0A040000 		.4byte	.LASF2
 356 003a 02       		.uleb128 0x2
 357 003b 02       		.byte	0x2
 358 003c 07       		.byte	0x7
 359 003d 58020000 		.4byte	.LASF3
 360 0041 02       		.uleb128 0x2
 361 0042 04       		.byte	0x4
 362 0043 05       		.byte	0x5
 363 0044 51010000 		.4byte	.LASF4
 364 0048 02       		.uleb128 0x2
 365 0049 04       		.byte	0x4
 366 004a 07       		.byte	0x7
 367 004b 07020000 		.4byte	.LASF5
 368 004f 02       		.uleb128 0x2
 369 0050 08       		.byte	0x8
 370 0051 05       		.byte	0x5
 371 0052 25010000 		.4byte	.LASF6
 372 0056 02       		.uleb128 0x2
 373 0057 08       		.byte	0x8
 374 0058 07       		.byte	0x7
 375 0059 3A000000 		.4byte	.LASF7
 376 005d 03       		.uleb128 0x3
 377 005e 04       		.byte	0x4
 378 005f 05       		.byte	0x5
 379 0060 696E7400 		.ascii	"int\000"
 380 0064 02       		.uleb128 0x2
 381 0065 04       		.byte	0x4
 382 0066 07       		.byte	0x7
 383 0067 EA010000 		.4byte	.LASF8
 384 006b 04       		.uleb128 0x4
 385 006c 75010000 		.4byte	.LASF9
 386 0070 02       		.byte	0x2
 387 0071 B901     		.2byte	0x1b9
 388 0073 2C000000 		.4byte	0x2c
 389 0077 04       		.uleb128 0x4
 390 0078 00000000 		.4byte	.LASF10
 391 007c 02       		.byte	0x2
 392 007d BA01     		.2byte	0x1ba
 393 007f 3A000000 		.4byte	0x3a
 394 0083 04       		.uleb128 0x4
 395 0084 B3010000 		.4byte	.LASF11
 396 0088 02       		.byte	0x2
 397 0089 BB01     		.2byte	0x1bb
 398 008b 48000000 		.4byte	0x48
 399 008f 02       		.uleb128 0x2
 400 0090 04       		.byte	0x4
 401 0091 04       		.byte	0x4
 402 0092 55030000 		.4byte	.LASF12
 403 0096 02       		.uleb128 0x2
 404 0097 08       		.byte	0x8
 405 0098 04       		.byte	0x4
 406 0099 8E010000 		.4byte	.LASF13
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 24


 407 009d 02       		.uleb128 0x2
 408 009e 01       		.byte	0x1
 409 009f 08       		.byte	0x8
 410 00a0 7B040000 		.4byte	.LASF14
 411 00a4 05       		.uleb128 0x5
 412 00a5 6B000000 		.4byte	0x6b
 413 00a9 04       		.uleb128 0x4
 414 00aa C8020000 		.4byte	.LASF15
 415 00ae 02       		.byte	0x2
 416 00af 6502     		.2byte	0x265
 417 00b1 B5000000 		.4byte	0xb5
 418 00b5 05       		.uleb128 0x5
 419 00b6 83000000 		.4byte	0x83
 420 00ba 02       		.uleb128 0x2
 421 00bb 04       		.byte	0x4
 422 00bc 07       		.byte	0x7
 423 00bd 08030000 		.4byte	.LASF16
 424 00c1 06       		.uleb128 0x6
 425 00c2 04       		.byte	0x4
 426 00c3 07       		.uleb128 0x7
 427 00c4 BA010000 		.4byte	.LASF17
 428 00c8 03       		.byte	0x3
 429 00c9 D8       		.byte	0xd8
 430 00ca 77000000 		.4byte	0x77
 431 00ce 07       		.uleb128 0x7
 432 00cf 19020000 		.4byte	.LASF18
 433 00d3 03       		.byte	0x3
 434 00d4 DC       		.byte	0xdc
 435 00d5 6B000000 		.4byte	0x6b
 436 00d9 08       		.uleb128 0x8
 437 00da 0E       		.byte	0xe
 438 00db 04       		.byte	0x4
 439 00dc 7B       		.byte	0x7b
 440 00dd 66010000 		.4byte	0x166
 441 00e1 09       		.uleb128 0x9
 442 00e2 4F040000 		.4byte	.LASF19
 443 00e6 04       		.byte	0x4
 444 00e7 81       		.byte	0x81
 445 00e8 77000000 		.4byte	0x77
 446 00ec 00       		.byte	0
 447 00ed 09       		.uleb128 0x9
 448 00ee 50050000 		.4byte	.LASF20
 449 00f2 04       		.byte	0x4
 450 00f3 86       		.byte	0x86
 451 00f4 C3000000 		.4byte	0xc3
 452 00f8 02       		.byte	0x2
 453 00f9 09       		.uleb128 0x9
 454 00fa 3B060000 		.4byte	.LASF21
 455 00fe 04       		.byte	0x4
 456 00ff 8B       		.byte	0x8b
 457 0100 6B000000 		.4byte	0x6b
 458 0104 04       		.byte	0x4
 459 0105 09       		.uleb128 0x9
 460 0106 1E030000 		.4byte	.LASF22
 461 010a 04       		.byte	0x4
 462 010b 90       		.byte	0x90
 463 010c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 25


 464 0110 05       		.byte	0x5
 465 0111 09       		.uleb128 0x9
 466 0112 B1030000 		.4byte	.LASF23
 467 0116 04       		.byte	0x4
 468 0117 95       		.byte	0x95
 469 0118 6B000000 		.4byte	0x6b
 470 011c 06       		.byte	0x6
 471 011d 09       		.uleb128 0x9
 472 011e 9F040000 		.4byte	.LASF24
 473 0122 04       		.byte	0x4
 474 0123 9A       		.byte	0x9a
 475 0124 6B000000 		.4byte	0x6b
 476 0128 07       		.byte	0x7
 477 0129 09       		.uleb128 0x9
 478 012a 45020000 		.4byte	.LASF25
 479 012e 04       		.byte	0x4
 480 012f A0       		.byte	0xa0
 481 0130 CE000000 		.4byte	0xce
 482 0134 08       		.byte	0x8
 483 0135 09       		.uleb128 0x9
 484 0136 8E030000 		.4byte	.LASF26
 485 013a 04       		.byte	0x4
 486 013b A5       		.byte	0xa5
 487 013c 6B000000 		.4byte	0x6b
 488 0140 09       		.byte	0x9
 489 0141 09       		.uleb128 0x9
 490 0142 F8020000 		.4byte	.LASF27
 491 0146 04       		.byte	0x4
 492 0147 AC       		.byte	0xac
 493 0148 66010000 		.4byte	0x166
 494 014c 0A       		.byte	0xa
 495 014d 09       		.uleb128 0x9
 496 014e 98040000 		.4byte	.LASF28
 497 0152 04       		.byte	0x4
 498 0153 B3       		.byte	0xb3
 499 0154 6B000000 		.4byte	0x6b
 500 0158 0B       		.byte	0xb
 501 0159 09       		.uleb128 0x9
 502 015a 31050000 		.4byte	.LASF29
 503 015e 04       		.byte	0x4
 504 015f B8       		.byte	0xb8
 505 0160 6B000000 		.4byte	0x6b
 506 0164 0C       		.byte	0xc
 507 0165 00       		.byte	0
 508 0166 0A       		.uleb128 0xa
 509 0167 6B000000 		.4byte	0x6b
 510 016b 76010000 		.4byte	0x176
 511 016f 0B       		.uleb128 0xb
 512 0170 BA000000 		.4byte	0xba
 513 0174 00       		.byte	0
 514 0175 00       		.byte	0
 515 0176 07       		.uleb128 0x7
 516 0177 B1020000 		.4byte	.LASF30
 517 017b 04       		.byte	0x4
 518 017c B9       		.byte	0xb9
 519 017d D9000000 		.4byte	0xd9
 520 0181 08       		.uleb128 0x8
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 26


 521 0182 0E       		.byte	0xe
 522 0183 04       		.byte	0x4
 523 0184 BE       		.byte	0xbe
 524 0185 0E020000 		.4byte	0x20e
 525 0189 09       		.uleb128 0x9
 526 018a 4F040000 		.4byte	.LASF19
 527 018e 04       		.byte	0x4
 528 018f C4       		.byte	0xc4
 529 0190 77000000 		.4byte	0x77
 530 0194 00       		.byte	0
 531 0195 09       		.uleb128 0x9
 532 0196 50050000 		.4byte	.LASF20
 533 019a 04       		.byte	0x4
 534 019b C9       		.byte	0xc9
 535 019c C3000000 		.4byte	0xc3
 536 01a0 02       		.byte	0x2
 537 01a1 09       		.uleb128 0x9
 538 01a2 3B060000 		.4byte	.LASF21
 539 01a6 04       		.byte	0x4
 540 01a7 CE       		.byte	0xce
 541 01a8 6B000000 		.4byte	0x6b
 542 01ac 04       		.byte	0x4
 543 01ad 09       		.uleb128 0x9
 544 01ae 1E030000 		.4byte	.LASF22
 545 01b2 04       		.byte	0x4
 546 01b3 D3       		.byte	0xd3
 547 01b4 6B000000 		.4byte	0x6b
 548 01b8 05       		.byte	0x5
 549 01b9 09       		.uleb128 0x9
 550 01ba B1030000 		.4byte	.LASF23
 551 01be 04       		.byte	0x4
 552 01bf D8       		.byte	0xd8
 553 01c0 6B000000 		.4byte	0x6b
 554 01c4 06       		.byte	0x6
 555 01c5 09       		.uleb128 0x9
 556 01c6 9F040000 		.4byte	.LASF24
 557 01ca 04       		.byte	0x4
 558 01cb DD       		.byte	0xdd
 559 01cc 6B000000 		.4byte	0x6b
 560 01d0 07       		.byte	0x7
 561 01d1 09       		.uleb128 0x9
 562 01d2 45020000 		.4byte	.LASF25
 563 01d6 04       		.byte	0x4
 564 01d7 E3       		.byte	0xe3
 565 01d8 CE000000 		.4byte	0xce
 566 01dc 08       		.byte	0x8
 567 01dd 09       		.uleb128 0x9
 568 01de 8E030000 		.4byte	.LASF26
 569 01e2 04       		.byte	0x4
 570 01e3 E8       		.byte	0xe8
 571 01e4 6B000000 		.4byte	0x6b
 572 01e8 09       		.byte	0x9
 573 01e9 09       		.uleb128 0x9
 574 01ea F8020000 		.4byte	.LASF27
 575 01ee 04       		.byte	0x4
 576 01ef EF       		.byte	0xef
 577 01f0 66010000 		.4byte	0x166
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 27


 578 01f4 0A       		.byte	0xa
 579 01f5 09       		.uleb128 0x9
 580 01f6 98040000 		.4byte	.LASF28
 581 01fa 04       		.byte	0x4
 582 01fb F6       		.byte	0xf6
 583 01fc 6B000000 		.4byte	0x6b
 584 0200 0B       		.byte	0xb
 585 0201 09       		.uleb128 0x9
 586 0202 31050000 		.4byte	.LASF29
 587 0206 04       		.byte	0x4
 588 0207 FB       		.byte	0xfb
 589 0208 6B000000 		.4byte	0x6b
 590 020c 0C       		.byte	0xc
 591 020d 00       		.byte	0
 592 020e 07       		.uleb128 0x7
 593 020f AA040000 		.4byte	.LASF31
 594 0213 04       		.byte	0x4
 595 0214 FC       		.byte	0xfc
 596 0215 81010000 		.4byte	0x181
 597 0219 0C       		.uleb128 0xc
 598 021a 0E       		.byte	0xe
 599 021b 04       		.byte	0x4
 600 021c 0201     		.2byte	0x102
 601 021e 30020000 		.4byte	0x230
 602 0222 0D       		.uleb128 0xd
 603 0223 3F010000 		.4byte	.LASF32
 604 0227 04       		.byte	0x4
 605 0228 0701     		.2byte	0x107
 606 022a 0E020000 		.4byte	0x20e
 607 022e 00       		.byte	0
 608 022f 00       		.byte	0
 609 0230 04       		.uleb128 0x4
 610 0231 DF030000 		.4byte	.LASF33
 611 0235 04       		.byte	0x4
 612 0236 0801     		.2byte	0x108
 613 0238 19020000 		.4byte	0x219
 614 023c 0C       		.uleb128 0xc
 615 023d 0A       		.byte	0xa
 616 023e 04       		.byte	0x4
 617 023f 0E01     		.2byte	0x10e
 618 0241 94020000 		.4byte	0x294
 619 0245 0E       		.uleb128 0xe
 620 0246 72617700 		.ascii	"raw\000"
 621 024a 04       		.byte	0x4
 622 024b 1301     		.2byte	0x113
 623 024d 94020000 		.4byte	0x294
 624 0251 00       		.byte	0
 625 0252 0D       		.uleb128 0xd
 626 0253 E5010000 		.4byte	.LASF34
 627 0257 04       		.byte	0x4
 628 0258 1801     		.2byte	0x118
 629 025a 94020000 		.4byte	0x294
 630 025e 02       		.byte	0x2
 631 025f 0D       		.uleb128 0xd
 632 0260 D2010000 		.4byte	.LASF35
 633 0264 04       		.byte	0x4
 634 0265 1E01     		.2byte	0x11e
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 28


 635 0267 66010000 		.4byte	0x166
 636 026b 04       		.byte	0x4
 637 026c 0D       		.uleb128 0xd
 638 026d C3040000 		.4byte	.LASF36
 639 0271 04       		.byte	0x4
 640 0272 2401     		.2byte	0x124
 641 0274 66010000 		.4byte	0x166
 642 0278 05       		.byte	0x5
 643 0279 0D       		.uleb128 0xd
 644 027a D8000000 		.4byte	.LASF37
 645 027e 04       		.byte	0x4
 646 027f 2901     		.2byte	0x129
 647 0281 C3000000 		.4byte	0xc3
 648 0285 06       		.byte	0x6
 649 0286 0D       		.uleb128 0xd
 650 0287 CC040000 		.4byte	.LASF38
 651 028b 04       		.byte	0x4
 652 028c 2E01     		.2byte	0x12e
 653 028e A4020000 		.4byte	0x2a4
 654 0292 08       		.byte	0x8
 655 0293 00       		.byte	0
 656 0294 0A       		.uleb128 0xa
 657 0295 77000000 		.4byte	0x77
 658 0299 A4020000 		.4byte	0x2a4
 659 029d 0B       		.uleb128 0xb
 660 029e BA000000 		.4byte	0xba
 661 02a2 00       		.byte	0
 662 02a3 00       		.byte	0
 663 02a4 0A       		.uleb128 0xa
 664 02a5 CE000000 		.4byte	0xce
 665 02a9 B4020000 		.4byte	0x2b4
 666 02ad 0B       		.uleb128 0xb
 667 02ae BA000000 		.4byte	0xba
 668 02b2 00       		.byte	0
 669 02b3 00       		.byte	0
 670 02b4 04       		.uleb128 0x4
 671 02b5 7B010000 		.4byte	.LASF39
 672 02b9 04       		.byte	0x4
 673 02ba 2F01     		.2byte	0x12f
 674 02bc 3C020000 		.4byte	0x23c
 675 02c0 0C       		.uleb128 0xc
 676 02c1 14       		.byte	0x14
 677 02c2 04       		.byte	0x4
 678 02c3 3501     		.2byte	0x135
 679 02c5 D7020000 		.4byte	0x2d7
 680 02c9 0D       		.uleb128 0xd
 681 02ca 3F010000 		.4byte	.LASF32
 682 02ce 04       		.byte	0x4
 683 02cf 3A01     		.2byte	0x13a
 684 02d1 D7020000 		.4byte	0x2d7
 685 02d5 00       		.byte	0
 686 02d6 00       		.byte	0
 687 02d7 0A       		.uleb128 0xa
 688 02d8 B4020000 		.4byte	0x2b4
 689 02dc E7020000 		.4byte	0x2e7
 690 02e0 0B       		.uleb128 0xb
 691 02e1 BA000000 		.4byte	0xba
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 29


 692 02e5 01       		.byte	0x1
 693 02e6 00       		.byte	0
 694 02e7 04       		.uleb128 0x4
 695 02e8 63040000 		.4byte	.LASF40
 696 02ec 04       		.byte	0x4
 697 02ed 3B01     		.2byte	0x13b
 698 02ef C0020000 		.4byte	0x2c0
 699 02f3 0C       		.uleb128 0xc
 700 02f4 44       		.byte	0x44
 701 02f5 04       		.byte	0x4
 702 02f6 4101     		.2byte	0x141
 703 02f8 CD030000 		.4byte	0x3cd
 704 02fc 0D       		.uleb128 0xd
 705 02fd 88020000 		.4byte	.LASF41
 706 0301 04       		.byte	0x4
 707 0302 4701     		.2byte	0x147
 708 0304 77000000 		.4byte	0x77
 709 0308 00       		.byte	0
 710 0309 0D       		.uleb128 0xd
 711 030a A8020000 		.4byte	.LASF42
 712 030e 04       		.byte	0x4
 713 030f 4C01     		.2byte	0x14c
 714 0311 77000000 		.4byte	0x77
 715 0315 02       		.byte	0x2
 716 0316 0D       		.uleb128 0xd
 717 0317 4C030000 		.4byte	.LASF43
 718 031b 04       		.byte	0x4
 719 031c 5201     		.2byte	0x152
 720 031e 77000000 		.4byte	0x77
 721 0322 04       		.byte	0x4
 722 0323 0D       		.uleb128 0xd
 723 0324 30030000 		.4byte	.LASF44
 724 0328 04       		.byte	0x4
 725 0329 5701     		.2byte	0x157
 726 032b 77000000 		.4byte	0x77
 727 032f 06       		.byte	0x6
 728 0330 0D       		.uleb128 0xd
 729 0331 F6040000 		.4byte	.LASF45
 730 0335 04       		.byte	0x4
 731 0336 5C01     		.2byte	0x15c
 732 0338 83000000 		.4byte	0x83
 733 033c 08       		.byte	0x8
 734 033d 0D       		.uleb128 0xd
 735 033e 2F020000 		.4byte	.LASF46
 736 0342 04       		.byte	0x4
 737 0343 6101     		.2byte	0x161
 738 0345 CD030000 		.4byte	0x3cd
 739 0349 0C       		.byte	0xc
 740 034a 0D       		.uleb128 0xd
 741 034b DA010000 		.4byte	.LASF47
 742 034f 04       		.byte	0x4
 743 0350 6601     		.2byte	0x166
 744 0352 CD030000 		.4byte	0x3cd
 745 0356 10       		.byte	0x10
 746 0357 0D       		.uleb128 0xd
 747 0358 47010000 		.4byte	.LASF48
 748 035c 04       		.byte	0x4
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 30


 749 035d 7401     		.2byte	0x174
 750 035f 66010000 		.4byte	0x166
 751 0363 14       		.byte	0x14
 752 0364 0D       		.uleb128 0xd
 753 0365 91020000 		.4byte	.LASF49
 754 0369 04       		.byte	0x4
 755 036a 7901     		.2byte	0x179
 756 036c 77000000 		.4byte	0x77
 757 0370 16       		.byte	0x16
 758 0371 0D       		.uleb128 0xd
 759 0372 5A010000 		.4byte	.LASF50
 760 0376 04       		.byte	0x4
 761 0377 7E01     		.2byte	0x17e
 762 0379 6B000000 		.4byte	0x6b
 763 037d 18       		.byte	0x18
 764 037e 0D       		.uleb128 0xd
 765 037f 5A040000 		.4byte	.LASF51
 766 0383 04       		.byte	0x4
 767 0384 8301     		.2byte	0x183
 768 0386 30020000 		.4byte	0x230
 769 038a 1A       		.byte	0x1a
 770 038b 0D       		.uleb128 0xd
 771 038c 80020000 		.4byte	.LASF52
 772 0390 04       		.byte	0x4
 773 0391 8801     		.2byte	0x188
 774 0393 E7020000 		.4byte	0x2e7
 775 0397 28       		.byte	0x28
 776 0398 0D       		.uleb128 0xd
 777 0399 F7010000 		.4byte	.LASF53
 778 039d 04       		.byte	0x4
 779 039e 8D01     		.2byte	0x18d
 780 03a0 6B000000 		.4byte	0x6b
 781 03a4 3C       		.byte	0x3c
 782 03a5 0D       		.uleb128 0xd
 783 03a6 00010000 		.4byte	.LASF54
 784 03aa 04       		.byte	0x4
 785 03ab 9201     		.2byte	0x192
 786 03ad 6B000000 		.4byte	0x6b
 787 03b1 3D       		.byte	0x3d
 788 03b2 0D       		.uleb128 0xd
 789 03b3 80050000 		.4byte	.LASF55
 790 03b7 04       		.byte	0x4
 791 03b8 9701     		.2byte	0x197
 792 03ba 77000000 		.4byte	0x77
 793 03be 3E       		.byte	0x3e
 794 03bf 0D       		.uleb128 0xd
 795 03c0 95010000 		.4byte	.LASF56
 796 03c4 04       		.byte	0x4
 797 03c5 9C01     		.2byte	0x19c
 798 03c7 94020000 		.4byte	0x294
 799 03cb 40       		.byte	0x40
 800 03cc 00       		.byte	0
 801 03cd 0A       		.uleb128 0xa
 802 03ce 83000000 		.4byte	0x83
 803 03d2 DD030000 		.4byte	0x3dd
 804 03d6 0B       		.uleb128 0xb
 805 03d7 BA000000 		.4byte	0xba
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 31


 806 03db 00       		.byte	0
 807 03dc 00       		.byte	0
 808 03dd 04       		.uleb128 0x4
 809 03de 5B030000 		.4byte	.LASF57
 810 03e2 04       		.byte	0x4
 811 03e3 9D01     		.2byte	0x19d
 812 03e5 F3020000 		.4byte	0x2f3
 813 03e9 0C       		.uleb128 0xc
 814 03ea 1C       		.byte	0x1c
 815 03eb 04       		.byte	0x4
 816 03ec A301     		.2byte	0x1a3
 817 03ee 68040000 		.4byte	0x468
 818 03f2 0D       		.uleb128 0xd
 819 03f3 F7000000 		.4byte	.LASF58
 820 03f7 04       		.byte	0x4
 821 03f8 A801     		.2byte	0x1a8
 822 03fa 68040000 		.4byte	0x468
 823 03fe 00       		.byte	0
 824 03ff 0D       		.uleb128 0xd
 825 0400 7A050000 		.4byte	.LASF59
 826 0404 04       		.byte	0x4
 827 0405 AD01     		.2byte	0x1ad
 828 0407 68040000 		.4byte	0x468
 829 040b 04       		.byte	0x4
 830 040c 0D       		.uleb128 0xd
 831 040d 92040000 		.4byte	.LASF60
 832 0411 04       		.byte	0x4
 833 0412 B201     		.2byte	0x1b2
 834 0414 68040000 		.4byte	0x468
 835 0418 08       		.byte	0x8
 836 0419 0D       		.uleb128 0xd
 837 041a 6F010000 		.4byte	.LASF61
 838 041e 04       		.byte	0x4
 839 041f B701     		.2byte	0x1b7
 840 0421 68040000 		.4byte	0x468
 841 0425 0C       		.byte	0xc
 842 0426 0D       		.uleb128 0xd
 843 0427 93050000 		.4byte	.LASF62
 844 042b 04       		.byte	0x4
 845 042c BC01     		.2byte	0x1bc
 846 042e 83000000 		.4byte	0x83
 847 0432 10       		.byte	0x10
 848 0433 0D       		.uleb128 0xd
 849 0434 CD010000 		.4byte	.LASF63
 850 0438 04       		.byte	0x4
 851 0439 C101     		.2byte	0x1c1
 852 043b 83000000 		.4byte	0x83
 853 043f 14       		.byte	0x14
 854 0440 0D       		.uleb128 0xd
 855 0441 30040000 		.4byte	.LASF64
 856 0445 04       		.byte	0x4
 857 0446 C601     		.2byte	0x1c6
 858 0448 6B000000 		.4byte	0x6b
 859 044c 18       		.byte	0x18
 860 044d 0D       		.uleb128 0xd
 861 044e AB010000 		.4byte	.LASF65
 862 0452 04       		.byte	0x4
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 32


 863 0453 CB01     		.2byte	0x1cb
 864 0455 6B000000 		.4byte	0x6b
 865 0459 19       		.byte	0x19
 866 045a 0D       		.uleb128 0xd
 867 045b A5010000 		.4byte	.LASF66
 868 045f 04       		.byte	0x4
 869 0460 D001     		.2byte	0x1d0
 870 0462 6B000000 		.4byte	0x6b
 871 0466 1A       		.byte	0x1a
 872 0467 00       		.byte	0
 873 0468 0F       		.uleb128 0xf
 874 0469 04       		.byte	0x4
 875 046a A9000000 		.4byte	0xa9
 876 046e 04       		.uleb128 0x4
 877 046f 6A030000 		.4byte	.LASF67
 878 0473 04       		.byte	0x4
 879 0474 D101     		.2byte	0x1d1
 880 0476 E9030000 		.4byte	0x3e9
 881 047a 0C       		.uleb128 0xc
 882 047b 1C       		.byte	0x1c
 883 047c 04       		.byte	0x4
 884 047d FC01     		.2byte	0x1fc
 885 047f F9040000 		.4byte	0x4f9
 886 0483 0D       		.uleb128 0xd
 887 0484 18050000 		.4byte	.LASF68
 888 0488 04       		.byte	0x4
 889 0489 0502     		.2byte	0x205
 890 048b F9040000 		.4byte	0x4f9
 891 048f 00       		.byte	0
 892 0490 0D       		.uleb128 0xd
 893 0491 9C020000 		.4byte	.LASF69
 894 0495 04       		.byte	0x4
 895 0496 0B02     		.2byte	0x20b
 896 0498 C1000000 		.4byte	0xc1
 897 049c 04       		.byte	0x4
 898 049d 0D       		.uleb128 0xd
 899 049e 64010000 		.4byte	.LASF70
 900 04a2 04       		.byte	0x4
 901 04a3 1102     		.2byte	0x211
 902 04a5 00050000 		.4byte	0x500
 903 04a9 08       		.byte	0x8
 904 04aa 0D       		.uleb128 0xd
 905 04ab 20040000 		.4byte	.LASF71
 906 04af 04       		.byte	0x4
 907 04b0 1602     		.2byte	0x216
 908 04b2 C1000000 		.4byte	0xc1
 909 04b6 0C       		.byte	0xc
 910 04b7 0D       		.uleb128 0xd
 911 04b8 E6040000 		.4byte	.LASF72
 912 04bc 04       		.byte	0x4
 913 04bd 1D02     		.2byte	0x21d
 914 04bf 06050000 		.4byte	0x506
 915 04c3 10       		.byte	0x10
 916 04c4 0D       		.uleb128 0xd
 917 04c5 11030000 		.4byte	.LASF73
 918 04c9 04       		.byte	0x4
 919 04ca 2202     		.2byte	0x222
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 33


 920 04cc 77000000 		.4byte	0x77
 921 04d0 14       		.byte	0x14
 922 04d1 0D       		.uleb128 0xd
 923 04d2 DA040000 		.4byte	.LASF74
 924 04d6 04       		.byte	0x4
 925 04d7 2902     		.2byte	0x229
 926 04d9 77000000 		.4byte	0x77
 927 04dd 16       		.byte	0x16
 928 04de 0D       		.uleb128 0xd
 929 04df 27030000 		.4byte	.LASF75
 930 04e3 04       		.byte	0x4
 931 04e4 3402     		.2byte	0x234
 932 04e6 6B000000 		.4byte	0x6b
 933 04ea 18       		.byte	0x18
 934 04eb 0D       		.uleb128 0xd
 935 04ec 00030000 		.4byte	.LASF76
 936 04f0 04       		.byte	0x4
 937 04f1 3C02     		.2byte	0x23c
 938 04f3 6B000000 		.4byte	0x6b
 939 04f7 19       		.byte	0x19
 940 04f8 00       		.byte	0
 941 04f9 0F       		.uleb128 0xf
 942 04fa 04       		.byte	0x4
 943 04fb FF040000 		.4byte	0x4ff
 944 04ff 10       		.uleb128 0x10
 945 0500 0F       		.uleb128 0xf
 946 0501 04       		.byte	0x4
 947 0502 B4020000 		.4byte	0x2b4
 948 0506 0F       		.uleb128 0xf
 949 0507 04       		.byte	0x4
 950 0508 6B000000 		.4byte	0x6b
 951 050c 04       		.uleb128 0x4
 952 050d 3B040000 		.4byte	.LASF77
 953 0511 04       		.byte	0x4
 954 0512 3D02     		.2byte	0x23d
 955 0514 7A040000 		.4byte	0x47a
 956 0518 0C       		.uleb128 0xc
 957 0519 1C       		.byte	0x1c
 958 051a 04       		.byte	0x4
 959 051b 4302     		.2byte	0x243
 960 051d 2F050000 		.4byte	0x52f
 961 0521 0D       		.uleb128 0xd
 962 0522 0E050000 		.4byte	.LASF78
 963 0526 04       		.byte	0x4
 964 0527 4802     		.2byte	0x248
 965 0529 2F050000 		.4byte	0x52f
 966 052d 00       		.byte	0
 967 052e 00       		.byte	0
 968 052f 0A       		.uleb128 0xa
 969 0530 0C050000 		.4byte	0x50c
 970 0534 3F050000 		.4byte	0x53f
 971 0538 0B       		.uleb128 0xb
 972 0539 BA000000 		.4byte	0xba
 973 053d 00       		.byte	0
 974 053e 00       		.byte	0
 975 053f 04       		.uleb128 0x4
 976 0540 FD040000 		.4byte	.LASF79
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 34


 977 0544 04       		.byte	0x4
 978 0545 4902     		.2byte	0x249
 979 0547 18050000 		.4byte	0x518
 980 054b 11       		.uleb128 0x11
 981 054c 80040000 		.4byte	.LASF83
 982 0550 01       		.byte	0x1
 983 0551 D902     		.2byte	0x2d9
 984 0553 03       		.byte	0x3
 985 0554 7D050000 		.4byte	0x57d
 986 0558 12       		.uleb128 0x12
 987 0559 3A020000 		.4byte	.LASF80
 988 055d 01       		.byte	0x1
 989 055e DD02     		.2byte	0x2dd
 990 0560 83000000 		.4byte	0x83
 991 0564 12       		.uleb128 0x12
 992 0565 9D050000 		.4byte	.LASF81
 993 0569 01       		.byte	0x1
 994 056a DE02     		.2byte	0x2de
 995 056c 83000000 		.4byte	0x83
 996 0570 12       		.uleb128 0x12
 997 0571 50020000 		.4byte	.LASF82
 998 0575 01       		.byte	0x1
 999 0576 DF02     		.2byte	0x2df
 1000 0578 7D050000 		.4byte	0x57d
 1001 057c 00       		.byte	0
 1002 057d 0F       		.uleb128 0xf
 1003 057e 04       		.byte	0x4
 1004 057f 83050000 		.4byte	0x583
 1005 0583 13       		.uleb128 0x13
 1006 0584 76010000 		.4byte	0x176
 1007 0588 14       		.uleb128 0x14
 1008 0589 24000000 		.4byte	.LASF85
 1009 058d 01       		.byte	0x1
 1010 058e 77       		.byte	0x77
 1011 058f 00000000 		.4byte	.LFB1
 1012 0593 78000000 		.4byte	.LFE1-.LFB1
 1013 0597 01       		.uleb128 0x1
 1014 0598 9C       		.byte	0x9c
 1015 0599 D3050000 		.4byte	0x5d3
 1016 059d 15       		.uleb128 0x15
 1017 059e 4B050000 		.4byte	0x54b
 1018 05a2 08000000 		.4byte	.LBB4
 1019 05a6 3E000000 		.4byte	.LBE4-.LBB4
 1020 05aa 01       		.byte	0x1
 1021 05ab 92       		.byte	0x92
 1022 05ac 16       		.uleb128 0x16
 1023 05ad 08000000 		.4byte	.LBB5
 1024 05b1 3E000000 		.4byte	.LBE5-.LBB5
 1025 05b5 17       		.uleb128 0x17
 1026 05b6 58050000 		.4byte	0x558
 1027 05ba 00000000 		.4byte	.LLST0
 1028 05be 17       		.uleb128 0x17
 1029 05bf 64050000 		.4byte	0x564
 1030 05c3 13000000 		.4byte	.LLST1
 1031 05c7 17       		.uleb128 0x17
 1032 05c8 70050000 		.4byte	0x570
 1033 05cc 42000000 		.4byte	.LLST2
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 35


 1034 05d0 00       		.byte	0
 1035 05d1 00       		.byte	0
 1036 05d2 00       		.byte	0
 1037 05d3 11       		.uleb128 0x11
 1038 05d4 11000000 		.4byte	.LASF84
 1039 05d8 01       		.byte	0x1
 1040 05d9 1903     		.2byte	0x319
 1041 05db 03       		.byte	0x3
 1042 05dc ED050000 		.4byte	0x5ed
 1043 05e0 12       		.uleb128 0x12
 1044 05e1 50020000 		.4byte	.LASF82
 1045 05e5 01       		.byte	0x1
 1046 05e6 2103     		.2byte	0x321
 1047 05e8 ED050000 		.4byte	0x5ed
 1048 05ec 00       		.byte	0
 1049 05ed 0F       		.uleb128 0xf
 1050 05ee 04       		.byte	0x4
 1051 05ef 76010000 		.4byte	0x176
 1052 05f3 14       		.uleb128 0x14
 1053 05f4 10010000 		.4byte	.LASF86
 1054 05f8 01       		.byte	0x1
 1055 05f9 E6       		.byte	0xe6
 1056 05fa 00000000 		.4byte	.LFB2
 1057 05fe 1C010000 		.4byte	.LFE2-.LFB2
 1058 0602 01       		.uleb128 0x1
 1059 0603 9C       		.byte	0x9c
 1060 0604 A7060000 		.4byte	0x6a7
 1061 0608 18       		.uleb128 0x18
 1062 0609 25050000 		.4byte	.LASF101
 1063 060d 01       		.byte	0x1
 1064 060e E9       		.byte	0xe9
 1065 060f A7060000 		.4byte	0x6a7
 1066 0613 55000000 		.4byte	.LLST3
 1067 0617 19       		.uleb128 0x19
 1068 0618 4B050000 		.4byte	0x54b
 1069 061c 24000000 		.4byte	.LBB10
 1070 0620 3A000000 		.4byte	.LBE10-.LBB10
 1071 0624 01       		.byte	0x1
 1072 0625 0601     		.2byte	0x106
 1073 0627 51060000 		.4byte	0x651
 1074 062b 16       		.uleb128 0x16
 1075 062c 24000000 		.4byte	.LBB11
 1076 0630 3A000000 		.4byte	.LBE11-.LBB11
 1077 0634 17       		.uleb128 0x17
 1078 0635 58050000 		.4byte	0x558
 1079 0639 68000000 		.4byte	.LLST4
 1080 063d 17       		.uleb128 0x17
 1081 063e 64050000 		.4byte	0x564
 1082 0642 7B000000 		.4byte	.LLST5
 1083 0646 17       		.uleb128 0x17
 1084 0647 70050000 		.4byte	0x570
 1085 064b AA000000 		.4byte	.LLST6
 1086 064f 00       		.byte	0
 1087 0650 00       		.byte	0
 1088 0651 19       		.uleb128 0x19
 1089 0652 D3050000 		.4byte	0x5d3
 1090 0656 62000000 		.4byte	.LBB12
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 36


 1091 065a 8E000000 		.4byte	.LBE12-.LBB12
 1092 065e 01       		.byte	0x1
 1093 065f 2501     		.2byte	0x125
 1094 0661 9D060000 		.4byte	0x69d
 1095 0665 16       		.uleb128 0x16
 1096 0666 62000000 		.4byte	.LBB13
 1097 066a 8E000000 		.4byte	.LBE13-.LBB13
 1098 066e 17       		.uleb128 0x17
 1099 066f E0050000 		.4byte	0x5e0
 1100 0673 BD000000 		.4byte	.LLST7
 1101 0677 1A       		.uleb128 0x1a
 1102 0678 B2000000 		.4byte	.LVL21
 1103 067c 10070000 		.4byte	0x710
 1104 0680 1A       		.uleb128 0x1a
 1105 0681 BE000000 		.4byte	.LVL22
 1106 0685 21070000 		.4byte	0x721
 1107 0689 1A       		.uleb128 0x1a
 1108 068a C2000000 		.4byte	.LVL23
 1109 068e 37070000 		.4byte	0x737
 1110 0692 1A       		.uleb128 0x1a
 1111 0693 E0000000 		.4byte	.LVL25
 1112 0697 3E070000 		.4byte	0x73e
 1113 069b 00       		.byte	0
 1114 069c 00       		.byte	0
 1115 069d 1A       		.uleb128 0x1a
 1116 069e 62000000 		.4byte	.LVL19
 1117 06a2 45070000 		.4byte	0x745
 1118 06a6 00       		.byte	0
 1119 06a7 0F       		.uleb128 0xf
 1120 06a8 04       		.byte	0x4
 1121 06a9 AD060000 		.4byte	0x6ad
 1122 06ad 13       		.uleb128 0x13
 1123 06ae 6E040000 		.4byte	0x46e
 1124 06b2 1B       		.uleb128 0x1b
 1125 06b3 07000000 		.4byte	.LASF87
 1126 06b7 04       		.byte	0x4
 1127 06b8 8103     		.2byte	0x381
 1128 06ba DD030000 		.4byte	0x3dd
 1129 06be 1B       		.uleb128 0x1b
 1130 06bf 14040000 		.4byte	.LASF88
 1131 06c3 04       		.byte	0x4
 1132 06c4 8203     		.2byte	0x382
 1133 06c6 CA060000 		.4byte	0x6ca
 1134 06ca 13       		.uleb128 0x13
 1135 06cb 3F050000 		.4byte	0x53f
 1136 06cf 1B       		.uleb128 0x1b
 1137 06d0 3E050000 		.4byte	.LASF89
 1138 06d4 05       		.byte	0x5
 1139 06d5 1A05     		.2byte	0x51a
 1140 06d7 DB060000 		.4byte	0x6db
 1141 06db 13       		.uleb128 0x13
 1142 06dc 6B000000 		.4byte	0x6b
 1143 06e0 1B       		.uleb128 0x1b
 1144 06e1 3C030000 		.4byte	.LASF90
 1145 06e5 05       		.byte	0x5
 1146 06e6 1C05     		.2byte	0x51c
 1147 06e8 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 37


 1148 06ec 1B       		.uleb128 0x1b
 1149 06ed 7E030000 		.4byte	.LASF91
 1150 06f1 05       		.byte	0x5
 1151 06f2 1D05     		.2byte	0x51d
 1152 06f4 A4000000 		.4byte	0xa4
 1153 06f8 1B       		.uleb128 0x1b
 1154 06f9 98030000 		.4byte	.LASF92
 1155 06fd 05       		.byte	0x5
 1156 06fe 1E05     		.2byte	0x51e
 1157 0700 6B000000 		.4byte	0x6b
 1158 0704 1B       		.uleb128 0x1b
 1159 0705 CE020000 		.4byte	.LASF93
 1160 0709 05       		.byte	0x5
 1161 070a 1F05     		.2byte	0x51f
 1162 070c 00050000 		.4byte	0x500
 1163 0710 1C       		.uleb128 0x1c
 1164 0711 F6030000 		.4byte	.LASF94
 1165 0715 06       		.byte	0x6
 1166 0716 54       		.byte	0x54
 1167 0717 21070000 		.4byte	0x721
 1168 071b 1D       		.uleb128 0x1d
 1169 071c 7D050000 		.4byte	0x57d
 1170 0720 00       		.byte	0
 1171 0721 1C       		.uleb128 0x1c
 1172 0722 DD000000 		.4byte	.LASF95
 1173 0726 06       		.byte	0x6
 1174 0727 67       		.byte	0x67
 1175 0728 37070000 		.4byte	0x737
 1176 072c 1D       		.uleb128 0x1d
 1177 072d 83000000 		.4byte	0x83
 1178 0731 1D       		.uleb128 0x1d
 1179 0732 83000000 		.4byte	0x83
 1180 0736 00       		.byte	0
 1181 0737 1E       		.uleb128 0x1e
 1182 0738 CA030000 		.4byte	.LASF96
 1183 073c 06       		.byte	0x6
 1184 073d 53       		.byte	0x53
 1185 073e 1E       		.uleb128 0x1e
 1186 073f DF020000 		.4byte	.LASF97
 1187 0743 05       		.byte	0x5
 1188 0744 7E       		.byte	0x7e
 1189 0745 1F       		.uleb128 0x1f
 1190 0746 6B020000 		.4byte	.LASF102
 1191 074a 06       		.byte	0x6
 1192 074b 44       		.byte	0x44
 1193 074c 1D       		.uleb128 0x1d
 1194 074d A7060000 		.4byte	0x6a7
 1195 0751 00       		.byte	0
 1196 0752 00       		.byte	0
 1197              		.section	.debug_abbrev,"",%progbits
 1198              	.Ldebug_abbrev0:
 1199 0000 01       		.uleb128 0x1
 1200 0001 11       		.uleb128 0x11
 1201 0002 01       		.byte	0x1
 1202 0003 25       		.uleb128 0x25
 1203 0004 0E       		.uleb128 0xe
 1204 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 38


 1205 0006 0B       		.uleb128 0xb
 1206 0007 03       		.uleb128 0x3
 1207 0008 0E       		.uleb128 0xe
 1208 0009 1B       		.uleb128 0x1b
 1209 000a 0E       		.uleb128 0xe
 1210 000b 55       		.uleb128 0x55
 1211 000c 17       		.uleb128 0x17
 1212 000d 11       		.uleb128 0x11
 1213 000e 01       		.uleb128 0x1
 1214 000f 10       		.uleb128 0x10
 1215 0010 17       		.uleb128 0x17
 1216 0011 00       		.byte	0
 1217 0012 00       		.byte	0
 1218 0013 02       		.uleb128 0x2
 1219 0014 24       		.uleb128 0x24
 1220 0015 00       		.byte	0
 1221 0016 0B       		.uleb128 0xb
 1222 0017 0B       		.uleb128 0xb
 1223 0018 3E       		.uleb128 0x3e
 1224 0019 0B       		.uleb128 0xb
 1225 001a 03       		.uleb128 0x3
 1226 001b 0E       		.uleb128 0xe
 1227 001c 00       		.byte	0
 1228 001d 00       		.byte	0
 1229 001e 03       		.uleb128 0x3
 1230 001f 24       		.uleb128 0x24
 1231 0020 00       		.byte	0
 1232 0021 0B       		.uleb128 0xb
 1233 0022 0B       		.uleb128 0xb
 1234 0023 3E       		.uleb128 0x3e
 1235 0024 0B       		.uleb128 0xb
 1236 0025 03       		.uleb128 0x3
 1237 0026 08       		.uleb128 0x8
 1238 0027 00       		.byte	0
 1239 0028 00       		.byte	0
 1240 0029 04       		.uleb128 0x4
 1241 002a 16       		.uleb128 0x16
 1242 002b 00       		.byte	0
 1243 002c 03       		.uleb128 0x3
 1244 002d 0E       		.uleb128 0xe
 1245 002e 3A       		.uleb128 0x3a
 1246 002f 0B       		.uleb128 0xb
 1247 0030 3B       		.uleb128 0x3b
 1248 0031 05       		.uleb128 0x5
 1249 0032 49       		.uleb128 0x49
 1250 0033 13       		.uleb128 0x13
 1251 0034 00       		.byte	0
 1252 0035 00       		.byte	0
 1253 0036 05       		.uleb128 0x5
 1254 0037 35       		.uleb128 0x35
 1255 0038 00       		.byte	0
 1256 0039 49       		.uleb128 0x49
 1257 003a 13       		.uleb128 0x13
 1258 003b 00       		.byte	0
 1259 003c 00       		.byte	0
 1260 003d 06       		.uleb128 0x6
 1261 003e 0F       		.uleb128 0xf
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 39


 1262 003f 00       		.byte	0
 1263 0040 0B       		.uleb128 0xb
 1264 0041 0B       		.uleb128 0xb
 1265 0042 00       		.byte	0
 1266 0043 00       		.byte	0
 1267 0044 07       		.uleb128 0x7
 1268 0045 16       		.uleb128 0x16
 1269 0046 00       		.byte	0
 1270 0047 03       		.uleb128 0x3
 1271 0048 0E       		.uleb128 0xe
 1272 0049 3A       		.uleb128 0x3a
 1273 004a 0B       		.uleb128 0xb
 1274 004b 3B       		.uleb128 0x3b
 1275 004c 0B       		.uleb128 0xb
 1276 004d 49       		.uleb128 0x49
 1277 004e 13       		.uleb128 0x13
 1278 004f 00       		.byte	0
 1279 0050 00       		.byte	0
 1280 0051 08       		.uleb128 0x8
 1281 0052 13       		.uleb128 0x13
 1282 0053 01       		.byte	0x1
 1283 0054 0B       		.uleb128 0xb
 1284 0055 0B       		.uleb128 0xb
 1285 0056 3A       		.uleb128 0x3a
 1286 0057 0B       		.uleb128 0xb
 1287 0058 3B       		.uleb128 0x3b
 1288 0059 0B       		.uleb128 0xb
 1289 005a 01       		.uleb128 0x1
 1290 005b 13       		.uleb128 0x13
 1291 005c 00       		.byte	0
 1292 005d 00       		.byte	0
 1293 005e 09       		.uleb128 0x9
 1294 005f 0D       		.uleb128 0xd
 1295 0060 00       		.byte	0
 1296 0061 03       		.uleb128 0x3
 1297 0062 0E       		.uleb128 0xe
 1298 0063 3A       		.uleb128 0x3a
 1299 0064 0B       		.uleb128 0xb
 1300 0065 3B       		.uleb128 0x3b
 1301 0066 0B       		.uleb128 0xb
 1302 0067 49       		.uleb128 0x49
 1303 0068 13       		.uleb128 0x13
 1304 0069 38       		.uleb128 0x38
 1305 006a 0B       		.uleb128 0xb
 1306 006b 00       		.byte	0
 1307 006c 00       		.byte	0
 1308 006d 0A       		.uleb128 0xa
 1309 006e 01       		.uleb128 0x1
 1310 006f 01       		.byte	0x1
 1311 0070 49       		.uleb128 0x49
 1312 0071 13       		.uleb128 0x13
 1313 0072 01       		.uleb128 0x1
 1314 0073 13       		.uleb128 0x13
 1315 0074 00       		.byte	0
 1316 0075 00       		.byte	0
 1317 0076 0B       		.uleb128 0xb
 1318 0077 21       		.uleb128 0x21
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 40


 1319 0078 00       		.byte	0
 1320 0079 49       		.uleb128 0x49
 1321 007a 13       		.uleb128 0x13
 1322 007b 2F       		.uleb128 0x2f
 1323 007c 0B       		.uleb128 0xb
 1324 007d 00       		.byte	0
 1325 007e 00       		.byte	0
 1326 007f 0C       		.uleb128 0xc
 1327 0080 13       		.uleb128 0x13
 1328 0081 01       		.byte	0x1
 1329 0082 0B       		.uleb128 0xb
 1330 0083 0B       		.uleb128 0xb
 1331 0084 3A       		.uleb128 0x3a
 1332 0085 0B       		.uleb128 0xb
 1333 0086 3B       		.uleb128 0x3b
 1334 0087 05       		.uleb128 0x5
 1335 0088 01       		.uleb128 0x1
 1336 0089 13       		.uleb128 0x13
 1337 008a 00       		.byte	0
 1338 008b 00       		.byte	0
 1339 008c 0D       		.uleb128 0xd
 1340 008d 0D       		.uleb128 0xd
 1341 008e 00       		.byte	0
 1342 008f 03       		.uleb128 0x3
 1343 0090 0E       		.uleb128 0xe
 1344 0091 3A       		.uleb128 0x3a
 1345 0092 0B       		.uleb128 0xb
 1346 0093 3B       		.uleb128 0x3b
 1347 0094 05       		.uleb128 0x5
 1348 0095 49       		.uleb128 0x49
 1349 0096 13       		.uleb128 0x13
 1350 0097 38       		.uleb128 0x38
 1351 0098 0B       		.uleb128 0xb
 1352 0099 00       		.byte	0
 1353 009a 00       		.byte	0
 1354 009b 0E       		.uleb128 0xe
 1355 009c 0D       		.uleb128 0xd
 1356 009d 00       		.byte	0
 1357 009e 03       		.uleb128 0x3
 1358 009f 08       		.uleb128 0x8
 1359 00a0 3A       		.uleb128 0x3a
 1360 00a1 0B       		.uleb128 0xb
 1361 00a2 3B       		.uleb128 0x3b
 1362 00a3 05       		.uleb128 0x5
 1363 00a4 49       		.uleb128 0x49
 1364 00a5 13       		.uleb128 0x13
 1365 00a6 38       		.uleb128 0x38
 1366 00a7 0B       		.uleb128 0xb
 1367 00a8 00       		.byte	0
 1368 00a9 00       		.byte	0
 1369 00aa 0F       		.uleb128 0xf
 1370 00ab 0F       		.uleb128 0xf
 1371 00ac 00       		.byte	0
 1372 00ad 0B       		.uleb128 0xb
 1373 00ae 0B       		.uleb128 0xb
 1374 00af 49       		.uleb128 0x49
 1375 00b0 13       		.uleb128 0x13
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 41


 1376 00b1 00       		.byte	0
 1377 00b2 00       		.byte	0
 1378 00b3 10       		.uleb128 0x10
 1379 00b4 26       		.uleb128 0x26
 1380 00b5 00       		.byte	0
 1381 00b6 00       		.byte	0
 1382 00b7 00       		.byte	0
 1383 00b8 11       		.uleb128 0x11
 1384 00b9 2E       		.uleb128 0x2e
 1385 00ba 01       		.byte	0x1
 1386 00bb 03       		.uleb128 0x3
 1387 00bc 0E       		.uleb128 0xe
 1388 00bd 3A       		.uleb128 0x3a
 1389 00be 0B       		.uleb128 0xb
 1390 00bf 3B       		.uleb128 0x3b
 1391 00c0 05       		.uleb128 0x5
 1392 00c1 27       		.uleb128 0x27
 1393 00c2 19       		.uleb128 0x19
 1394 00c3 20       		.uleb128 0x20
 1395 00c4 0B       		.uleb128 0xb
 1396 00c5 01       		.uleb128 0x1
 1397 00c6 13       		.uleb128 0x13
 1398 00c7 00       		.byte	0
 1399 00c8 00       		.byte	0
 1400 00c9 12       		.uleb128 0x12
 1401 00ca 34       		.uleb128 0x34
 1402 00cb 00       		.byte	0
 1403 00cc 03       		.uleb128 0x3
 1404 00cd 0E       		.uleb128 0xe
 1405 00ce 3A       		.uleb128 0x3a
 1406 00cf 0B       		.uleb128 0xb
 1407 00d0 3B       		.uleb128 0x3b
 1408 00d1 05       		.uleb128 0x5
 1409 00d2 49       		.uleb128 0x49
 1410 00d3 13       		.uleb128 0x13
 1411 00d4 00       		.byte	0
 1412 00d5 00       		.byte	0
 1413 00d6 13       		.uleb128 0x13
 1414 00d7 26       		.uleb128 0x26
 1415 00d8 00       		.byte	0
 1416 00d9 49       		.uleb128 0x49
 1417 00da 13       		.uleb128 0x13
 1418 00db 00       		.byte	0
 1419 00dc 00       		.byte	0
 1420 00dd 14       		.uleb128 0x14
 1421 00de 2E       		.uleb128 0x2e
 1422 00df 01       		.byte	0x1
 1423 00e0 3F       		.uleb128 0x3f
 1424 00e1 19       		.uleb128 0x19
 1425 00e2 03       		.uleb128 0x3
 1426 00e3 0E       		.uleb128 0xe
 1427 00e4 3A       		.uleb128 0x3a
 1428 00e5 0B       		.uleb128 0xb
 1429 00e6 3B       		.uleb128 0x3b
 1430 00e7 0B       		.uleb128 0xb
 1431 00e8 27       		.uleb128 0x27
 1432 00e9 19       		.uleb128 0x19
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 42


 1433 00ea 11       		.uleb128 0x11
 1434 00eb 01       		.uleb128 0x1
 1435 00ec 12       		.uleb128 0x12
 1436 00ed 06       		.uleb128 0x6
 1437 00ee 40       		.uleb128 0x40
 1438 00ef 18       		.uleb128 0x18
 1439 00f0 9742     		.uleb128 0x2117
 1440 00f2 19       		.uleb128 0x19
 1441 00f3 01       		.uleb128 0x1
 1442 00f4 13       		.uleb128 0x13
 1443 00f5 00       		.byte	0
 1444 00f6 00       		.byte	0
 1445 00f7 15       		.uleb128 0x15
 1446 00f8 1D       		.uleb128 0x1d
 1447 00f9 01       		.byte	0x1
 1448 00fa 31       		.uleb128 0x31
 1449 00fb 13       		.uleb128 0x13
 1450 00fc 11       		.uleb128 0x11
 1451 00fd 01       		.uleb128 0x1
 1452 00fe 12       		.uleb128 0x12
 1453 00ff 06       		.uleb128 0x6
 1454 0100 58       		.uleb128 0x58
 1455 0101 0B       		.uleb128 0xb
 1456 0102 59       		.uleb128 0x59
 1457 0103 0B       		.uleb128 0xb
 1458 0104 00       		.byte	0
 1459 0105 00       		.byte	0
 1460 0106 16       		.uleb128 0x16
 1461 0107 0B       		.uleb128 0xb
 1462 0108 01       		.byte	0x1
 1463 0109 11       		.uleb128 0x11
 1464 010a 01       		.uleb128 0x1
 1465 010b 12       		.uleb128 0x12
 1466 010c 06       		.uleb128 0x6
 1467 010d 00       		.byte	0
 1468 010e 00       		.byte	0
 1469 010f 17       		.uleb128 0x17
 1470 0110 34       		.uleb128 0x34
 1471 0111 00       		.byte	0
 1472 0112 31       		.uleb128 0x31
 1473 0113 13       		.uleb128 0x13
 1474 0114 02       		.uleb128 0x2
 1475 0115 17       		.uleb128 0x17
 1476 0116 00       		.byte	0
 1477 0117 00       		.byte	0
 1478 0118 18       		.uleb128 0x18
 1479 0119 34       		.uleb128 0x34
 1480 011a 00       		.byte	0
 1481 011b 03       		.uleb128 0x3
 1482 011c 0E       		.uleb128 0xe
 1483 011d 3A       		.uleb128 0x3a
 1484 011e 0B       		.uleb128 0xb
 1485 011f 3B       		.uleb128 0x3b
 1486 0120 0B       		.uleb128 0xb
 1487 0121 49       		.uleb128 0x49
 1488 0122 13       		.uleb128 0x13
 1489 0123 02       		.uleb128 0x2
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 43


 1490 0124 17       		.uleb128 0x17
 1491 0125 00       		.byte	0
 1492 0126 00       		.byte	0
 1493 0127 19       		.uleb128 0x19
 1494 0128 1D       		.uleb128 0x1d
 1495 0129 01       		.byte	0x1
 1496 012a 31       		.uleb128 0x31
 1497 012b 13       		.uleb128 0x13
 1498 012c 11       		.uleb128 0x11
 1499 012d 01       		.uleb128 0x1
 1500 012e 12       		.uleb128 0x12
 1501 012f 06       		.uleb128 0x6
 1502 0130 58       		.uleb128 0x58
 1503 0131 0B       		.uleb128 0xb
 1504 0132 59       		.uleb128 0x59
 1505 0133 05       		.uleb128 0x5
 1506 0134 01       		.uleb128 0x1
 1507 0135 13       		.uleb128 0x13
 1508 0136 00       		.byte	0
 1509 0137 00       		.byte	0
 1510 0138 1A       		.uleb128 0x1a
 1511 0139 898201   		.uleb128 0x4109
 1512 013c 00       		.byte	0
 1513 013d 11       		.uleb128 0x11
 1514 013e 01       		.uleb128 0x1
 1515 013f 31       		.uleb128 0x31
 1516 0140 13       		.uleb128 0x13
 1517 0141 00       		.byte	0
 1518 0142 00       		.byte	0
 1519 0143 1B       		.uleb128 0x1b
 1520 0144 34       		.uleb128 0x34
 1521 0145 00       		.byte	0
 1522 0146 03       		.uleb128 0x3
 1523 0147 0E       		.uleb128 0xe
 1524 0148 3A       		.uleb128 0x3a
 1525 0149 0B       		.uleb128 0xb
 1526 014a 3B       		.uleb128 0x3b
 1527 014b 05       		.uleb128 0x5
 1528 014c 49       		.uleb128 0x49
 1529 014d 13       		.uleb128 0x13
 1530 014e 3F       		.uleb128 0x3f
 1531 014f 19       		.uleb128 0x19
 1532 0150 3C       		.uleb128 0x3c
 1533 0151 19       		.uleb128 0x19
 1534 0152 00       		.byte	0
 1535 0153 00       		.byte	0
 1536 0154 1C       		.uleb128 0x1c
 1537 0155 2E       		.uleb128 0x2e
 1538 0156 01       		.byte	0x1
 1539 0157 3F       		.uleb128 0x3f
 1540 0158 19       		.uleb128 0x19
 1541 0159 03       		.uleb128 0x3
 1542 015a 0E       		.uleb128 0xe
 1543 015b 3A       		.uleb128 0x3a
 1544 015c 0B       		.uleb128 0xb
 1545 015d 3B       		.uleb128 0x3b
 1546 015e 0B       		.uleb128 0xb
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 44


 1547 015f 27       		.uleb128 0x27
 1548 0160 19       		.uleb128 0x19
 1549 0161 3C       		.uleb128 0x3c
 1550 0162 19       		.uleb128 0x19
 1551 0163 01       		.uleb128 0x1
 1552 0164 13       		.uleb128 0x13
 1553 0165 00       		.byte	0
 1554 0166 00       		.byte	0
 1555 0167 1D       		.uleb128 0x1d
 1556 0168 05       		.uleb128 0x5
 1557 0169 00       		.byte	0
 1558 016a 49       		.uleb128 0x49
 1559 016b 13       		.uleb128 0x13
 1560 016c 00       		.byte	0
 1561 016d 00       		.byte	0
 1562 016e 1E       		.uleb128 0x1e
 1563 016f 2E       		.uleb128 0x2e
 1564 0170 00       		.byte	0
 1565 0171 3F       		.uleb128 0x3f
 1566 0172 19       		.uleb128 0x19
 1567 0173 03       		.uleb128 0x3
 1568 0174 0E       		.uleb128 0xe
 1569 0175 3A       		.uleb128 0x3a
 1570 0176 0B       		.uleb128 0xb
 1571 0177 3B       		.uleb128 0x3b
 1572 0178 0B       		.uleb128 0xb
 1573 0179 27       		.uleb128 0x27
 1574 017a 19       		.uleb128 0x19
 1575 017b 3C       		.uleb128 0x3c
 1576 017c 19       		.uleb128 0x19
 1577 017d 00       		.byte	0
 1578 017e 00       		.byte	0
 1579 017f 1F       		.uleb128 0x1f
 1580 0180 2E       		.uleb128 0x2e
 1581 0181 01       		.byte	0x1
 1582 0182 3F       		.uleb128 0x3f
 1583 0183 19       		.uleb128 0x19
 1584 0184 03       		.uleb128 0x3
 1585 0185 0E       		.uleb128 0xe
 1586 0186 3A       		.uleb128 0x3a
 1587 0187 0B       		.uleb128 0xb
 1588 0188 3B       		.uleb128 0x3b
 1589 0189 0B       		.uleb128 0xb
 1590 018a 27       		.uleb128 0x27
 1591 018b 19       		.uleb128 0x19
 1592 018c 3C       		.uleb128 0x3c
 1593 018d 19       		.uleb128 0x19
 1594 018e 00       		.byte	0
 1595 018f 00       		.byte	0
 1596 0190 00       		.byte	0
 1597              		.section	.debug_loc,"",%progbits
 1598              	.Ldebug_loc0:
 1599              	.LLST0:
 1600 0000 20000000 		.4byte	.LVL1
 1601 0004 3C000000 		.4byte	.LVL7
 1602 0008 0100     		.2byte	0x1
 1603 000a 52       		.byte	0x52
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 45


 1604 000b 00000000 		.4byte	0
 1605 000f 00000000 		.4byte	0
 1606              	.LLST1:
 1607 0013 28000000 		.4byte	.LVL3
 1608 0017 2E000000 		.4byte	.LVL4
 1609 001b 0100     		.2byte	0x1
 1610 001d 53       		.byte	0x53
 1611 001e 2E000000 		.4byte	.LVL4
 1612 0022 30000000 		.4byte	.LVL5
 1613 0026 0700     		.2byte	0x7
 1614 0028 31       		.byte	0x31
 1615 0029 71       		.byte	0x71
 1616 002a 00       		.sleb128 0
 1617 002b 24       		.byte	0x24
 1618 002c 31       		.byte	0x31
 1619 002d 1C       		.byte	0x1c
 1620 002e 9F       		.byte	0x9f
 1621 002f 3A000000 		.4byte	.LVL6
 1622 0033 46000000 		.4byte	.LVL8
 1623 0037 0100     		.2byte	0x1
 1624 0039 53       		.byte	0x53
 1625 003a 00000000 		.4byte	0
 1626 003e 00000000 		.4byte	0
 1627              	.LLST2:
 1628 0042 18000000 		.4byte	.LVL0
 1629 0046 24000000 		.4byte	.LVL2
 1630 004a 0100     		.2byte	0x1
 1631 004c 53       		.byte	0x53
 1632 004d 00000000 		.4byte	0
 1633 0051 00000000 		.4byte	0
 1634              	.LLST3:
 1635 0055 1C000000 		.4byte	.LVL9
 1636 0059 61000000 		.4byte	.LVL19-1
 1637 005d 0100     		.2byte	0x1
 1638 005f 50       		.byte	0x50
 1639 0060 00000000 		.4byte	0
 1640 0064 00000000 		.4byte	0
 1641              	.LLST4:
 1642 0068 38000000 		.4byte	.LVL11
 1643 006c 54000000 		.4byte	.LVL17
 1644 0070 0100     		.2byte	0x1
 1645 0072 52       		.byte	0x52
 1646 0073 00000000 		.4byte	0
 1647 0077 00000000 		.4byte	0
 1648              	.LLST5:
 1649 007b 40000000 		.4byte	.LVL13
 1650 007f 46000000 		.4byte	.LVL14
 1651 0083 0100     		.2byte	0x1
 1652 0085 53       		.byte	0x53
 1653 0086 46000000 		.4byte	.LVL14
 1654 008a 48000000 		.4byte	.LVL15
 1655 008e 0700     		.2byte	0x7
 1656 0090 31       		.byte	0x31
 1657 0091 71       		.byte	0x71
 1658 0092 00       		.sleb128 0
 1659 0093 24       		.byte	0x24
 1660 0094 31       		.byte	0x31
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 46


 1661 0095 1C       		.byte	0x1c
 1662 0096 9F       		.byte	0x9f
 1663 0097 52000000 		.4byte	.LVL16
 1664 009b 5E000000 		.4byte	.LVL18
 1665 009f 0100     		.2byte	0x1
 1666 00a1 53       		.byte	0x53
 1667 00a2 00000000 		.4byte	0
 1668 00a6 00000000 		.4byte	0
 1669              	.LLST6:
 1670 00aa 30000000 		.4byte	.LVL10
 1671 00ae 3C000000 		.4byte	.LVL12
 1672 00b2 0100     		.2byte	0x1
 1673 00b4 53       		.byte	0x53
 1674 00b5 00000000 		.4byte	0
 1675 00b9 00000000 		.4byte	0
 1676              	.LLST7:
 1677 00bd 72000000 		.4byte	.LVL20
 1678 00c1 B1000000 		.4byte	.LVL21-1
 1679 00c5 0100     		.2byte	0x1
 1680 00c7 50       		.byte	0x50
 1681 00c8 C4000000 		.4byte	.LVL24
 1682 00cc DF000000 		.4byte	.LVL25-1
 1683 00d0 0100     		.2byte	0x1
 1684 00d2 50       		.byte	0x50
 1685 00d3 E2000000 		.4byte	.LVL26
 1686 00d7 F0000000 		.4byte	.LVL27
 1687 00db 0100     		.2byte	0x1
 1688 00dd 50       		.byte	0x50
 1689 00de 00000000 		.4byte	0
 1690 00e2 00000000 		.4byte	0
 1691              		.section	.debug_aranges,"",%progbits
 1692 0000 24000000 		.4byte	0x24
 1693 0004 0200     		.2byte	0x2
 1694 0006 00000000 		.4byte	.Ldebug_info0
 1695 000a 04       		.byte	0x4
 1696 000b 00       		.byte	0
 1697 000c 0000     		.2byte	0
 1698 000e 0000     		.2byte	0
 1699 0010 00000000 		.4byte	.LFB1
 1700 0014 78000000 		.4byte	.LFE1-.LFB1
 1701 0018 00000000 		.4byte	.LFB2
 1702 001c 1C010000 		.4byte	.LFE2-.LFB2
 1703 0020 00000000 		.4byte	0
 1704 0024 00000000 		.4byte	0
 1705              		.section	.debug_ranges,"",%progbits
 1706              	.Ldebug_ranges0:
 1707 0000 00000000 		.4byte	.LFB1
 1708 0004 78000000 		.4byte	.LFE1
 1709 0008 00000000 		.4byte	.LFB2
 1710 000c 1C010000 		.4byte	.LFE2
 1711 0010 00000000 		.4byte	0
 1712 0014 00000000 		.4byte	0
 1713              		.section	.debug_line,"",%progbits
 1714              	.Ldebug_line0:
 1715 0000 00010000 		.section	.debug_str,"MS",%progbits,1
 1715      02009600 
 1715      00000201 
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 47


 1715      FB0E0D00 
 1715      01010101 
 1716              	.LASF10:
 1717 0000 75696E74 		.ascii	"uint16\000"
 1717      313600
 1718              	.LASF87:
 1719 0007 4353445F 		.ascii	"CSD_dsRam\000"
 1719      64735261 
 1719      6D00
 1720              	.LASF84:
 1721 0011 4353445F 		.ascii	"CSD_SsInitNextScan\000"
 1721      5373496E 
 1721      69744E65 
 1721      78745363 
 1721      616E00
 1722              	.LASF85:
 1723 0024 4353445F 		.ascii	"CSD_CSDPostSingleScan\000"
 1723      43534450 
 1723      6F737453 
 1723      696E676C 
 1723      65536361 
 1724              	.LASF7:
 1725 003a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1725      206C6F6E 
 1725      6720756E 
 1725      7369676E 
 1725      65642069 
 1726              	.LASF100:
 1727 0051 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\IUSB\\IU\\Spring-2017\\CS"
 1727      635C486F 
 1727      6D655C44 
 1727      6F63756D 
 1727      656E7473 
 1728 007c 43492D42 		.ascii	"CI-B541\\project\\Project 2\\Project-WhileYouWereOu"
 1728      3534315C 
 1728      70726F6A 
 1728      6563745C 
 1728      50726F6A 
 1729 00ac 742D6D61 		.ascii	"t-master\\PSOCFirmware\\BabyRoomWatcher.cydsn\000"
 1729      73746572 
 1729      5C50534F 
 1729      43466972 
 1729      6D776172 
 1730              	.LASF37:
 1731 00d8 64696666 		.ascii	"diff\000"
 1731      00
 1732              	.LASF95:
 1733 00dd 4353445F 		.ascii	"CSD_SsCSDConnectSensorExt\000"
 1733      53734353 
 1733      44436F6E 
 1733      6E656374 
 1733      53656E73 
 1734              	.LASF58:
 1735 00f7 6873696F 		.ascii	"hsiomPtr\000"
 1735      6D507472 
 1735      00
 1736              	.LASF54:
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 48


 1737 0100 736E7254 		.ascii	"snrTestSensorId\000"
 1737      65737453 
 1737      656E736F 
 1737      72496400 
 1738              	.LASF86:
 1739 0110 4353445F 		.ascii	"CSD_CSDPostMultiScan\000"
 1739      43534450 
 1739      6F73744D 
 1739      756C7469 
 1739      5363616E 
 1740              	.LASF6:
 1741 0125 6C6F6E67 		.ascii	"long long int\000"
 1741      206C6F6E 
 1741      6720696E 
 1741      7400
 1742              	.LASF0:
 1743 0133 7369676E 		.ascii	"signed char\000"
 1743      65642063 
 1743      68617200 
 1744              	.LASF32:
 1745 013f 62757474 		.ascii	"button0\000"
 1745      6F6E3000 
 1746              	.LASF48:
 1747 0147 736E7353 		.ascii	"snsStatus\000"
 1747      74617475 
 1747      7300
 1748              	.LASF4:
 1749 0151 6C6F6E67 		.ascii	"long int\000"
 1749      20696E74 
 1749      00
 1750              	.LASF50:
 1751 015a 6D6F6443 		.ascii	"modCsdClk\000"
 1751      7364436C 
 1751      6B00
 1752              	.LASF70:
 1753 0164 70747232 		.ascii	"ptr2SnsRam\000"
 1753      536E7352 
 1753      616D00
 1754              	.LASF61:
 1755 016f 70735074 		.ascii	"psPtr\000"
 1755      7200
 1756              	.LASF9:
 1757 0175 75696E74 		.ascii	"uint8\000"
 1757      3800
 1758              	.LASF39:
 1759 017b 4353445F 		.ascii	"CSD_RAM_SNS_STRUCT\000"
 1759      52414D5F 
 1759      534E535F 
 1759      53545255 
 1759      435400
 1760              	.LASF13:
 1761 018e 646F7562 		.ascii	"double\000"
 1761      6C6500
 1762              	.LASF56:
 1763 0195 736E7254 		.ascii	"snrTestRawCount\000"
 1763      65737452 
 1763      6177436F 
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 49


 1763      756E7400 
 1764              	.LASF66:
 1765 01a5 73686966 		.ascii	"shift\000"
 1765      7400
 1766              	.LASF65:
 1767 01ab 64725368 		.ascii	"drShift\000"
 1767      69667400 
 1768              	.LASF11:
 1769 01b3 75696E74 		.ascii	"uint32\000"
 1769      333200
 1770              	.LASF17:
 1771 01ba 4353445F 		.ascii	"CSD_THRESHOLD_TYPE\000"
 1771      54485245 
 1771      53484F4C 
 1771      445F5459 
 1771      504500
 1772              	.LASF63:
 1773 01cd 6D61736B 		.ascii	"mask\000"
 1773      00
 1774              	.LASF35:
 1775 01d2 62736C6E 		.ascii	"bslnExt\000"
 1775      45787400 
 1776              	.LASF47:
 1777 01da 77646774 		.ascii	"wdgtStatus\000"
 1777      53746174 
 1777      757300
 1778              	.LASF34:
 1779 01e5 62736C6E 		.ascii	"bsln\000"
 1779      00
 1780              	.LASF8:
 1781 01ea 756E7369 		.ascii	"unsigned int\000"
 1781      676E6564 
 1781      20696E74 
 1781      00
 1782              	.LASF53:
 1783 01f7 736E7254 		.ascii	"snrTestWidgetId\000"
 1783      65737457 
 1783      69646765 
 1783      74496400 
 1784              	.LASF5:
 1785 0207 6C6F6E67 		.ascii	"long unsigned int\000"
 1785      20756E73 
 1785      69676E65 
 1785      6420696E 
 1785      7400
 1786              	.LASF18:
 1787 0219 4353445F 		.ascii	"CSD_LOW_BSLN_RST_TYPE\000"
 1787      4C4F575F 
 1787      42534C4E 
 1787      5F525354 
 1787      5F545950 
 1788              	.LASF46:
 1789 022f 77646774 		.ascii	"wdgtEnable\000"
 1789      456E6162 
 1789      6C6500
 1790              	.LASF80:
 1791 023a 746D7052 		.ascii	"tmpRawData\000"
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 50


 1791      61774461 
 1791      746100
 1792              	.LASF25:
 1793 0245 6C6F7742 		.ascii	"lowBslnRst\000"
 1793      736C6E52 
 1793      737400
 1794              	.LASF82:
 1795 0250 70747257 		.ascii	"ptrWdgt\000"
 1795      64677400 
 1796              	.LASF3:
 1797 0258 73686F72 		.ascii	"short unsigned int\000"
 1797      7420756E 
 1797      7369676E 
 1797      65642069 
 1797      6E7400
 1798              	.LASF102:
 1799 026b 4353445F 		.ascii	"CSD_CSDDisconnectSns\000"
 1799      43534444 
 1799      6973636F 
 1799      6E6E6563 
 1799      74536E73 
 1800              	.LASF52:
 1801 0280 736E734C 		.ascii	"snsList\000"
 1801      69737400 
 1802              	.LASF41:
 1803 0288 636F6E66 		.ascii	"configId\000"
 1803      69674964 
 1803      00
 1804              	.LASF49:
 1805 0291 63736430 		.ascii	"csd0Config\000"
 1805      436F6E66 
 1805      696700
 1806              	.LASF69:
 1807 029c 70747232 		.ascii	"ptr2WdgtRam\000"
 1807      57646774 
 1807      52616D00 
 1808              	.LASF42:
 1809 02a8 64657669 		.ascii	"deviceId\000"
 1809      63654964 
 1809      00
 1810              	.LASF30:
 1811 02b1 4353445F 		.ascii	"CSD_RAM_WD_BASE_STRUCT\000"
 1811      52414D5F 
 1811      57445F42 
 1811      4153455F 
 1811      53545255 
 1812              	.LASF15:
 1813 02c8 72656733 		.ascii	"reg32\000"
 1813      3200
 1814              	.LASF93:
 1815 02ce 4353445F 		.ascii	"CSD_curRamSnsPtr\000"
 1815      63757252 
 1815      616D536E 
 1815      73507472 
 1815      00
 1816              	.LASF97:
 1817 02df 4353445F 		.ascii	"CSD_SsPostAllWidgetsScan\000"
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 51


 1817      5373506F 
 1817      7374416C 
 1817      6C576964 
 1817      67657473 
 1818              	.LASF27:
 1819 02f8 69646163 		.ascii	"idacMod\000"
 1819      4D6F6400 
 1820              	.LASF76:
 1821 0300 6E756D43 		.ascii	"numCols\000"
 1821      6F6C7300 
 1822              	.LASF16:
 1823 0308 73697A65 		.ascii	"sizetype\000"
 1823      74797065 
 1823      00
 1824              	.LASF73:
 1825 0311 73746174 		.ascii	"staticConfig\000"
 1825      6963436F 
 1825      6E666967 
 1825      00
 1826              	.LASF22:
 1827 031e 6E4E6F69 		.ascii	"nNoiseTh\000"
 1827      73655468 
 1827      00
 1828              	.LASF75:
 1829 0327 77646774 		.ascii	"wdgtType\000"
 1829      54797065 
 1829      00
 1830              	.LASF44:
 1831 0330 7363616E 		.ascii	"scanCounter\000"
 1831      436F756E 
 1831      74657200 
 1832              	.LASF90:
 1833 033c 4353445F 		.ascii	"CSD_widgetIndex\000"
 1833      77696467 
 1833      6574496E 
 1833      64657800 
 1834              	.LASF43:
 1835 034c 74756E65 		.ascii	"tunerCmd\000"
 1835      72436D64 
 1835      00
 1836              	.LASF12:
 1837 0355 666C6F61 		.ascii	"float\000"
 1837      7400
 1838              	.LASF57:
 1839 035b 4353445F 		.ascii	"CSD_RAM_STRUCT\000"
 1839      52414D5F 
 1839      53545255 
 1839      435400
 1840              	.LASF67:
 1841 036a 4353445F 		.ascii	"CSD_FLASH_IO_STRUCT\000"
 1841      464C4153 
 1841      485F494F 
 1841      5F535452 
 1841      55435400 
 1842              	.LASF91:
 1843 037e 4353445F 		.ascii	"CSD_sensorIndex\000"
 1843      73656E73 
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 52


 1843      6F72496E 
 1843      64657800 
 1844              	.LASF26:
 1845 038e 62736C6E 		.ascii	"bslnCoeff\000"
 1845      436F6566 
 1845      6600
 1846              	.LASF92:
 1847 0398 4353445F 		.ascii	"CSD_requestScanAllWidget\000"
 1847      72657175 
 1847      65737453 
 1847      63616E41 
 1847      6C6C5769 
 1848              	.LASF23:
 1849 03b1 68797374 		.ascii	"hysteresis\000"
 1849      65726573 
 1849      697300
 1850              	.LASF1:
 1851 03bc 756E7369 		.ascii	"unsigned char\000"
 1851      676E6564 
 1851      20636861 
 1851      7200
 1852              	.LASF96:
 1853 03ca 4353445F 		.ascii	"CSD_SsCSDStartSample\000"
 1853      53734353 
 1853      44537461 
 1853      72745361 
 1853      6D706C65 
 1854              	.LASF33:
 1855 03df 4353445F 		.ascii	"CSD_RAM_WD_LIST_STRUCT\000"
 1855      52414D5F 
 1855      57445F4C 
 1855      4953545F 
 1855      53545255 
 1856              	.LASF94:
 1857 03f6 4353445F 		.ascii	"CSD_SsCSDSetUpIdacs\000"
 1857      53734353 
 1857      44536574 
 1857      55704964 
 1857      61637300 
 1858              	.LASF2:
 1859 040a 73686F72 		.ascii	"short int\000"
 1859      7420696E 
 1859      7400
 1860              	.LASF88:
 1861 0414 4353445F 		.ascii	"CSD_dsFlash\000"
 1861      6473466C 
 1861      61736800 
 1862              	.LASF71:
 1863 0420 70747232 		.ascii	"ptr2FltrHistory\000"
 1863      466C7472 
 1863      48697374 
 1863      6F727900 
 1864              	.LASF64:
 1865 0430 6873696F 		.ascii	"hsiomShift\000"
 1865      6D536869 
 1865      667400
 1866              	.LASF77:
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 53


 1867 043b 4353445F 		.ascii	"CSD_FLASH_WD_STRUCT\000"
 1867      464C4153 
 1867      485F5744 
 1867      5F535452 
 1867      55435400 
 1868              	.LASF19:
 1869 044f 7265736F 		.ascii	"resolution\000"
 1869      6C757469 
 1869      6F6E00
 1870              	.LASF51:
 1871 045a 77646774 		.ascii	"wdgtList\000"
 1871      4C697374 
 1871      00
 1872              	.LASF40:
 1873 0463 4353445F 		.ascii	"CSD_RAM_SNS_LIST_STRUCT\000"
 1873      52414D5F 
 1873      534E535F 
 1873      4C495354 
 1873      5F535452 
 1874              	.LASF14:
 1875 047b 63686172 		.ascii	"char\000"
 1875      00
 1876              	.LASF83:
 1877 0480 4353445F 		.ascii	"CSD_SsCSDPostScan\000"
 1877      53734353 
 1877      44506F73 
 1877      74536361 
 1877      6E00
 1878              	.LASF60:
 1879 0492 64725074 		.ascii	"drPtr\000"
 1879      7200
 1880              	.LASF28:
 1881 0498 736E7343 		.ascii	"snsClk\000"
 1881      6C6B00
 1882              	.LASF24:
 1883 049f 6F6E4465 		.ascii	"onDebounce\000"
 1883      626F756E 
 1883      636500
 1884              	.LASF31:
 1885 04aa 4353445F 		.ascii	"CSD_RAM_WD_BUTTON_STRUCT\000"
 1885      52414D5F 
 1885      57445F42 
 1885      5554544F 
 1885      4E5F5354 
 1886              	.LASF36:
 1887 04c3 69646163 		.ascii	"idacComp\000"
 1887      436F6D70 
 1887      00
 1888              	.LASF38:
 1889 04cc 6E656742 		.ascii	"negBslnRstCnt\000"
 1889      736C6E52 
 1889      7374436E 
 1889      7400
 1890              	.LASF74:
 1891 04da 746F7461 		.ascii	"totalNumSns\000"
 1891      6C4E756D 
 1891      536E7300 
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 54


 1892              	.LASF72:
 1893 04e6 70747232 		.ascii	"ptr2DebounceArr\000"
 1893      4465626F 
 1893      756E6365 
 1893      41727200 
 1894              	.LASF45:
 1895 04f6 73746174 		.ascii	"status\000"
 1895      757300
 1896              	.LASF79:
 1897 04fd 4353445F 		.ascii	"CSD_FLASH_STRUCT\000"
 1897      464C4153 
 1897      485F5354 
 1897      52554354 
 1897      00
 1898              	.LASF78:
 1899 050e 77646774 		.ascii	"wdgtArray\000"
 1899      41727261 
 1899      7900
 1900              	.LASF68:
 1901 0518 70747232 		.ascii	"ptr2SnsFlash\000"
 1901      536E7346 
 1901      6C617368 
 1901      00
 1902              	.LASF101:
 1903 0525 63757253 		.ascii	"curSnsIOPtr\000"
 1903      6E73494F 
 1903      50747200 
 1904              	.LASF29:
 1905 0531 736E7343 		.ascii	"snsClkSource\000"
 1905      6C6B536F 
 1905      75726365 
 1905      00
 1906              	.LASF89:
 1907 053e 4353445F 		.ascii	"CSD_scanFreqIndex\000"
 1907      7363616E 
 1907      46726571 
 1907      496E6465 
 1907      7800
 1908              	.LASF20:
 1909 0550 66696E67 		.ascii	"fingerTh\000"
 1909      65725468 
 1909      00
 1910              	.LASF99:
 1911 0559 47656E65 		.ascii	"Generated_Source\\PSoC4\\CSD_INT.c\000"
 1911      72617465 
 1911      645F536F 
 1911      75726365 
 1911      5C50536F 
 1912              	.LASF59:
 1913 057a 70635074 		.ascii	"pcPtr\000"
 1913      7200
 1914              	.LASF55:
 1915 0580 736E7254 		.ascii	"snrTestScanCounter\000"
 1915      65737453 
 1915      63616E43 
 1915      6F756E74 
 1915      657200
ARM GAS  C:\Users\raymond\AppData\Local\Temp\ccdZWjmQ.s 			page 55


 1916              	.LASF62:
 1917 0593 6873696F 		.ascii	"hsiomMask\000"
 1917      6D4D6173 
 1917      6B00
 1918              	.LASF81:
 1919 059d 746D704D 		.ascii	"tmpMaxCount\000"
 1919      6178436F 
 1919      756E7400 
 1920              	.LASF98:
 1921 05a9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1921      4320342E 
 1921      392E3320 
 1921      32303135 
 1921      30333033 
 1922 05dc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 1922      20726576 
 1922      6973696F 
 1922      6E203232 
 1922      31323230 
 1923 060f 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 1923      67202D66 
 1923      66756E63 
 1923      74696F6E 
 1923      2D736563 
 1924              	.LASF21:
 1925 063b 6E6F6973 		.ascii	"noiseTh\000"
 1925      65546800 
 1926              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
